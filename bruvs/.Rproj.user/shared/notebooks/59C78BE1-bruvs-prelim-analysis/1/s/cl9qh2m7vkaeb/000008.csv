"0","# this isn't correct, we need to include the drops that had no sharks seen"
"0",""
"0","# Missing six drops that showed no sharks "
"0","length(unique(maxN_data$Drop)) # 89"
"1","[1]"
"1"," 89"
"1","
"
"0","length(spsum_data$Drop) # 95"
"1","[1]"
"1"," 95"
"1","
"
"0","# fix the ""OpCode"" for drop 49 in the MaxN csv"
"0","maxN_data$OpCode <- dplyr::recode(maxN_data$OpCode, ""BIOT_7097_SALO_0419_MAP_RIG3"" = ""BIOT_7097_SALO_049_MAP_RIG3"")"
"0",""
"0","# Combine the two dataframes"
"0","maxN_complete <- full_join(maxN_data, spsum_data, "
"0","                   by = c(""Drop"", ""Region"", ""Island"", ""Lat"", "
"0","                          ""Long"", ""OpCode"","
"0","                          ""Time.to.bait.loss..min."" = ""Time.to.bait.loss""))"
"2","Column `Lat` joining factors with different levels, coercing to character vector"
"2","Column `Long` joining factors with different levels, coercing to character vector"
"2","Column `OpCode` joining factors with different levels, coercing to character vector"
"0","# Make the MaxN=NA to zero"
"0","maxN_complete$MaxN <- maxN_complete$MaxN %>% replace_na(0)"
"0","sum(maxN_complete$MaxN) #405"
"1","[1]"
"1"," 405"
"1","
"
"0","sum(maxN_data$MaxN) #405 "
"1","[1]"
"1"," 405"
"1","
"
"0","### INCLUDE ZEROS ###"
"0","# Need to include the zeros into the dataframe because they didn't have a row when they didn't have a MaxN during the 60mins "
"0",""
"0","# Function from Alex to add zero rows"
"0","fillZeros <- function(data, speciesCol, uniqueID, keepCols){"
"0","  "
"0","  "
"0","  fullSppList = unique(speciesCol)"
"0","  "
"0","  # this is a datafram with a single row for each every species of interest repeated for each transect conducted"
"0","  fullEmptyFrame = data %>%"
"0","    dplyr::select(keepCols) %>%"
"0","    distinct(OpCode, .keep_all = T) %>%"
"0","    tidyr::crossing(fullSppList) %>%"
"0","  mutate(Species = fullSppList )%>%"
"0","  dplyr::select(-fullSppList)"
"0","  "
"0","  "
"0","  "
"0","  fillData = data %>% "
"0","    dplyr::select({{uniqueID}},Time..mins., MaxN, Frame, Species) #we excluded time_min, frame, and MaxN - these are unique to each observation everything else metadata"
"0","  "
"0","  CompleteData = left_join(fullEmptyFrame, fillData, by = c(""OpCode"", ""Species"")) %>% "
"0","    mutate(MaxN = ifelse(is.na(MaxN), 0 , MaxN))"
"0","  "
"0","  return(CompleteData)"
"0","  "
"0","}"
"0",""
"0","# Run the function"
"0","FilteredData <- fillZeros(maxN_complete, maxN_complete$Species, uniqueID = ""OpCode"", keepCols=c(1, 4:14, 16:20)) # double checked its correct by sum of MaxN"
"0",""
"0","# Double check the function worked"
"0","sum(FilteredData$MaxN) #405"
"1","[1]"
"1"," 405"
"1","
"
"0","sum(maxN_complete$MaxN) #405"
"1","[1]"
"1"," 405"
"1","
"
"0","# Get rid of silvertip (Because it only occurs twice)"
"0","SharkComplete <- FilteredData %>% filter(Species != ""albimarginatus"")"
"0","sum(SharkComplete$MaxN) # 403"
"1","[1]"
"1"," 403"
"1","
"
"0","# Add in Time Deployed Data and time to bait loss to the zero rows we just added (base on the same OPcode)"
"0","SharkComplete <- SharkComplete %>%"
"0","  mutate(Total.deployment.time..min. = ifelse(is.na(Total.deployment.time..min.), Total.deployment.time..min. , MaxN))"
"0",""
"0","# Get rid of Eagle Island"
"0","#SharkComplete <- FilteredData %>% filter(Region != ""Eagle Island"")"
"0","#sum(SharkComplete$MaxN) # 368"
