lengths %>%
filter(Full.Species=="Serranidae.Cephalopholis.argus") %>%
group_by(Atoll, Filename) %>%
ggplot(aes(x=Atoll, y=Length..mm.)) +
geom_boxplot() +
geom_point() +
theme_pubr() +
ylab("Cephalopholis argus (mm)")
# plot some of the ones we are interested in
lengths %>%
filter(Family=="Serranidae") %>%
group_by(Atoll, Filename) %>%
ggplot(aes(x=Atoll, y=Length..mm.)) +
geom_boxplot() +
geom_point() +
theme_pubr() +
ylab("Serranidae (mm)")
# plot some of the ones we are interested in
lengths %>%
filter(Family=="Lutjanidae") %>%
group_by(Atoll, Filename) %>%
ggplot(aes(x=Atoll, y=Length..mm.)) +
geom_boxplot() +
geom_point() +
theme_pubr() +
ylab("Lutjanidae (mm)")
lengths %>%
filter(Family == "Lutjanidae") %>%
group_by(Atoll, Filename) %>%
ggplot(aes(x=Atoll, y=Length..mm.)) +
geom_boxplot() +
geom_point() +
theme_pubr() +
facet_wrap(~ Full.Species)
lengths %>%
filter(Family == "Serranidae") %>%
group_by(Atoll, Filename) %>%
ggplot(aes(x=Atoll, y=Length..mm.)) +
geom_boxplot() +
geom_point() +
theme_pubr() +
facet_wrap(~ Full.Species)
knitr::opts_chunk$set(echo = TRUE)
# shark max N Data
maxN_data <- read.csv(file='../data/raw/maxN_Chagos_201903.csv', header=TRUE, sep=",")
# shark species summary data: has all the drops
spsum_data <- read.csv(file='../data/raw/species_summary_Chagos_201903.csv', header=TRUE, sep=",")
# shark length data
lengths_data <- read.csv(file='../data/raw/lengths_Chagos_201903.csv', header=TRUE, sep=",")
# load libraries
library(dplyr);library(ggplot2);library(ggpubr);library(tidyr);library(car);library(MASS);library(pscl);library(lmtest);library(multcomp);library(sjPlot);library(lsmeans);library(rcompanion);library(ggsignif);library(stringr)
### MERGE THE TWO DATASETS ###
# Summary Statistics: by island (across species)
maxN_data %>%
group_by(Region) %>%
summarize(n_Drop= length(unique(Drop))) # sample size per island
# this isn't correct, we need to include the drops that had no sharks seen
# Missing six drops that showed no sharks
length(unique(maxN_data$Drop)) # 89
length(spsum_data$Drop) # 95
# fix the "OpCode" for drop 49 in the MaxN csv
maxN_data$OpCode <- dplyr::recode(maxN_data$OpCode, "BIOT_7097_SALO_0419_MAP_RIG3" = "BIOT_7097_SALO_049_MAP_RIG3")
# Combine the two dataframes
maxN_complete <- full_join(maxN_data, spsum_data,
by = c("Drop", "Region", "Island", "Lat",
"Long", "OpCode",
"Time.to.bait.loss..min." = "Time.to.bait.loss"))
# Make the MaxN=NA to zero
maxN_complete$MaxN <- maxN_complete$MaxN %>% replace_na(0)
sum(maxN_complete$MaxN) #405
sum(maxN_data$MaxN) #405
### INCLUDE ZEROS ###
# Need to include the zeros into the dataframe because they didn't have a row when they didn't have a MaxN during the 60mins
# Function from Alex to add zero rows
fillZeros <- function(data, speciesCol, uniqueID, keepCols){
fullSppList = unique(speciesCol)
# this is a datafram with a single row for each every species of interest repeated for each transect conducted
fullEmptyFrame = data %>%
dplyr::select(keepCols) %>%
distinct(OpCode, .keep_all = T) %>%
tidyr::crossing(fullSppList) %>%
mutate(Species = fullSppList )%>%
dplyr::select(-fullSppList)
fillData = data %>%
dplyr::select({{uniqueID}},Time..mins., MaxN, Frame, Species) #we excluded time_min, frame, and MaxN - these are unique to each observation everything else metadata
CompleteData = left_join(fullEmptyFrame, fillData, by = c("OpCode", "Species")) %>%
mutate(MaxN = ifelse(is.na(MaxN), 0 , MaxN))
return(CompleteData)
}
# Run the function
FilteredData <- fillZeros(maxN_complete, maxN_complete$Species, uniqueID = "OpCode", keepCols=c(1, 4:14, 16:20)) # double checked its correct by sum of MaxN
# Double check the function worked
sum(FilteredData$MaxN) #405
sum(maxN_complete$MaxN) #405
# Get rid of silvertip (Because it only occurs twice)
SharkComplete <- FilteredData %>% filter(Species != "albimarginatus")
sum(SharkComplete$MaxN) # 403
# Add in Time Deployed Data and time to bait loss to the zero rows we just added (base on the same OPcode)
SharkComplete <- SharkComplete %>%
mutate(Total.deployment.time..min. = ifelse(is.na(Total.deployment.time..min.), Total.deployment.time..min. , MaxN))
# Get rid of Eagle Island
#SharkComplete <- FilteredData %>% filter(Region != "Eagle Island")
#sum(SharkComplete$MaxN) # 368
View(SharkComplete)
### MERGE THE TWO DATASETS ###
# Summary Statistics: by island (across species)
maxN_data %>%
group_by(Region) %>%
summarize(n_Drop= length(unique(Drop))) # sample size per island
# this isn't correct, we need to include the drops that had no sharks seen
# Missing six drops that showed no sharks
length(unique(maxN_data$Drop)) # 89
length(spsum_data$Drop) # 95
# fix the "OpCode" for drop 49 in the MaxN csv
maxN_data$OpCode <- dplyr::recode(maxN_data$OpCode, "BIOT_7097_SALO_0419_MAP_RIG3" = "BIOT_7097_SALO_049_MAP_RIG3")
# Combine the two dataframes
maxN_complete <- full_join(maxN_data, spsum_data,
by = c("Drop", "Region", "Island", "Lat",
"Long", "OpCode",
"Time.to.bait.loss..min." = "Time.to.bait.loss"))
# Make the MaxN=NA to zero
maxN_complete$MaxN <- maxN_complete$MaxN %>% replace_na(0)
sum(maxN_complete$MaxN) #405
sum(maxN_data$MaxN) #405
### INCLUDE ZEROS ###
# Need to include the zeros into the dataframe because they didn't have a row when they didn't have a MaxN during the 60mins
# Function from Alex to add zero rows
fillZeros <- function(data, speciesCol, uniqueID, keepCols){
fullSppList = unique(speciesCol)
# this is a datafram with a single row for each every species of interest repeated for each transect conducted
fullEmptyFrame = data %>%
dplyr::select(keepCols) %>%
distinct(OpCode, .keep_all = T) %>%
tidyr::crossing(fullSppList) %>%
mutate(Species = fullSppList )%>%
dplyr::select(-fullSppList)
fillData = data %>%
dplyr::select({{uniqueID}},Time..mins., MaxN, Frame, Species) #we excluded time_min, frame, and MaxN - these are unique to each observation everything else metadata
CompleteData = left_join(fullEmptyFrame, fillData, by = c("OpCode", "Species")) %>%
mutate(MaxN = ifelse(is.na(MaxN), 0 , MaxN))
return(CompleteData)
}
# Run the function
FilteredData <- fillZeros(maxN_complete, maxN_complete$Species, uniqueID = "OpCode", keepCols=c(1, 4:14, 16:20)) # double checked its correct by sum of MaxN
# Double check the function worked
sum(FilteredData$MaxN) #405
sum(maxN_complete$MaxN) #405
# Get rid of silvertip (Because it only occurs twice)
SharkComplete <- FilteredData %>% filter(Species != "albimarginatus")
sum(SharkComplete$MaxN) # 403
# Add in Time Deployed Data and time to bait loss to the zero rows we just added (base on the same OPcode)
SharkComplete <- SharkComplete %>%
mutate(Total.deployment.time..min. = ifelse(is.na(Total.deployment.time..min.), Total.deployment.time..min. , MaxN))
# Get rid of Eagle Island
#SharkComplete <- FilteredData %>% filter(Region != "Eagle Island")
#sum(SharkComplete$MaxN) # 368
save(SharkComplete, file="../data/created/")
save(SharkComplete, file="..data/created/")
save(SharkComplete, file="data/created/")
save(SharkComplete, file="/data/created/")
save(SharkComplete, file="/data/created/SharkComplete.RData")
save(SharkComplete, file="../data/created/SharkComplete.RData")
load("../data/created/SharkComplete.RData")
SharkComplete
SharkComplete %>%
group_by(OpCode) %>%
summarize(count = count())
SharkComplete %>%
group_by(OpCode) %>%
summarize(Sum_MaxN = sum(MaxN))
fishes_maxN_data_wide
View(fishes_maxN_data)
View(fishes_maxN_data_wide)
fishes_maxN_data_long
# Mesopredators
test <- fishes_maxN_data_long %>%
filter(Family %in% c("Serranidae", "Lethrinidae", "Lutjanidae", "Haemulidae")) %>%
group_by(Atoll, Full.Species) %>%
summarize(mean_maxN = mean(MaxN)) %>%
group_by(Atoll) %>%
summarize(sum_maxN = sum(mean_maxN),
sd_maxN = sd(mean_maxN),
se_maxN = sd_maxN/ sqrt(length(mean_maxN)))
test
# Mesopredators
mesopredators <- fishes_maxN_data_long %>%
filter(Family %in% c("Serranidae", "Lethrinidae", "Lutjanidae", "Haemulidae"))
View(mesopredators)
# Mesopredators
mesopredators <- fishes_maxN_data_long %>%
filter(Family %in% c("Serranidae", "Lethrinidae", "Lutjanidae", "Haemulidae")) %>%
summarize(Sum_MaxN = sum(MaxN))
# Mesopredators
mesopredators <- fishes_maxN_data_long %>%
filter(Family %in% c("Serranidae", "Lethrinidae", "Lutjanidae", "Haemulidae")) %>%
group_by(OpCode) %>%
summarize(Sum_MaxN = sum(MaxN))
# Mesopredators
mesos <- fishes_maxN_data_long %>%
filter(Family %in% c("Serranidae", "Lethrinidae", "Lutjanidae", "Haemulidae")) %>%
group_by(OpCode) %>%
summarize(Sum_MaxN = sum(MaxN))
# Combine
data_shark.mesos <- left_join(SharkComplete, mesos, by= "OpCode")
View(data_shark.mesos)
# Mesopredators
mesos <- fishes_maxN_data_long %>%
filter(Family %in% c("Serranidae", "Lethrinidae", "Lutjanidae", "Haemulidae")) %>%
group_by(OpCode) %>%
summarize(Sum_MaxN = sum(MaxN))
sharks <- SharkComplete %>%
group_by(OpCode) %>%
summarize(Sum_MaxN = sum(MaxN))
# Combine
data_shark.mesos <- left_join(sharks, mesos, by= "OpCode")
sharks <- SharkComplete %>%
group_by(OpCode) %>%
summarize(Shark_Sum_MaxN = sum(MaxN))
# Mesopredators
mesos <- fishes_maxN_data_long %>%
filter(Family %in% c("Serranidae", "Lethrinidae", "Lutjanidae", "Haemulidae")) %>%
group_by(OpCode) %>%
summarize(Mesos_Sum_MaxN = sum(MaxN))
# Combine
data_shark.mesos <- left_join(sharks, mesos, by= "OpCode")
# Combine
data_shark.mesos <- left_join(sharks, mesos, by= "OpCode") %>%
df %>% drop_na(Mesos_Sum_MaxN)
# Combine
data_shark.mesos <- left_join(sharks, mesos, by= "OpCode") %>%
%>% drop_na(Mesos_Sum_MaxN)
# Combine
data_shark.mesos <- left_join(sharks, mesos, by= "OpCode") %>%
%>% drop_na(Mesos_Sum_MaxN)
# Combine
data_shark.mesos <- left_join(sharks, mesos, by= "OpCode") %>%
drop_na(Mesos_Sum_MaxN)
data_shark.mesos %>%
ggplot(aes(y= Shark_Sum_MaxN, x= Mesos_Sum_MaxN))
data_shark.mesos %>%
ggplot(aes(y= Shark_Sum_MaxN, x= Mesos_Sum_MaxN)) +
geom_point()
data_shark.mesos %>%
ggplot(aes(y= Mesos_Sum_MaxN , x= Shark_Sum_MaxN)) +
geom_point()
data_shark.mesos %>%
ggplot(aes(y= Mesos_Sum_MaxN , x= Shark_Sum_MaxN)) +
geom_point() +
geom_smooth()
fishes_maxN_data_long %>%
filter(Family %in% c("Serranidae")) %>%
group_by(OpCode) %>%
summarize(Mesos_Sum_MaxN = sum(MaxN)) %<%
left_join(sharks, mesos, by= "OpCode") %>%
drop_na(Mesos_Sum_MaxN) %>%
ggplot(aes(y= Mesos_Sum_MaxN , x= Shark_Sum_MaxN)) +
geom_point() +
geom_smooth()
# Mesopredators
fishes_maxN_data_long %>%
filter(Family %in% c("Serranidae")) %>%
group_by(OpCode) %>%
summarize(Mesos_Sum_MaxN = sum(MaxN)) %>%
left_join(sharks, mesos, by= "OpCode") %>%
drop_na(Mesos_Sum_MaxN) %>%
ggplot(aes(y= Mesos_Sum_MaxN , x= Shark_Sum_MaxN)) +
geom_point() +
geom_smooth()
# Mesopredators
fishes_maxN_data_long %>%
filter(Family %in% c("Serranidae")) %>%
group_by(OpCode) %>%
summarize(Serranidae_Sum_MaxN = sum(MaxN)) %>%
left_join(sharks, by= "OpCode") %>%
drop_na(Serranidae_Sum_MaxN) %>%
ggplot(aes(y= Serrinidae_Sum_MaxN , x= Shark_Sum_MaxN)) +
geom_point() +
geom_smooth()
# Mesopredators
fishes_maxN_data_long %>%
filter(Family %in% c("Serranidae")) %>%
group_by(OpCode) %>%
summarize(Serranidae_Sum_MaxN = sum(MaxN)) %>%
left_join(sharks, by= "OpCode") %>%
drop_na(Serranidae_Sum_MaxN) %>%
ggplot(aes(y= Serrinidae_Sum_MaxN , x= Shark_Sum_MaxN)) +
geom_point() +
geom_smooth()
# Mesopredators
fishes_maxN_data_long %>%
filter(Family %in% c("Serranidae")) %>%
group_by(OpCode) %>%
summarize(Serranidae_Sum_MaxN = sum(MaxN)) %>%
left_join(sharks, by= "OpCode") %>%
drop_na(Serranidae_Sum_MaxN) %>%
ggplot(aes(y= Serrinidae_Sum_MaxN , x= Shark_Sum_MaxN)) +
geom_point() +
geom_smooth()
# Mesopredators
fishes_maxN_data_long %>%
filter(Family %in% c("Serranidae")) %>%
group_by(OpCode) %>%
summarize(Serranidae_Sum_MaxN = sum(MaxN)) %>%
left_join(sharks, by= "OpCode") %>%
drop_na(Serranidae_Sum_MaxN) %>%
ggplot(aes(y= Serranidae_Sum_MaxN , x= Shark_Sum_MaxN)) +
geom_point() +
geom_smooth()
# Lutjanidae
fishes_maxN_data_long %>%
filter(Family %in% c("Lutjanidae")) %>%
group_by(OpCode) %>%
summarize(Lutjanidae_Sum_MaxN = sum(MaxN)) %>%
left_join(sharks, by= "OpCode") %>%
drop_na(Lutjanidae_Sum_MaxN) %>%
ggplot(aes(y= Lutjanidae_Sum_MaxN , x= Shark_Sum_MaxN)) +
geom_point() +
geom_smooth()
# Serranidae
fishes_maxN_data_long %>%
filter(Family %in% c("Lethrinidae")) %>%
group_by(OpCode) %>%
summarize(Lethrinidae_Sum_MaxN = sum(MaxN)) %>%
left_join(sharks, by= "OpCode") %>%
drop_na(Lethrinidae_Sum_MaxN) %>%
ggplot(aes(y= Lethrinidae_Sum_MaxN , x= Shark_Sum_MaxN)) +
geom_point() +
geom_smooth()
# Lutjanidae
fishes_maxN_data_long %>%
filter(Family %in% c("Haemulidae")) %>%
group_by(OpCode) %>%
summarize(Haemulidae_Sum_MaxN = sum(MaxN)) %>%
left_join(sharks, by= "OpCode") %>%
drop_na(Haemulidae_Sum_MaxN) %>%
ggplot(aes(y= Haemulidae_Sum_MaxN , x= Shark_Sum_MaxN)) +
geom_point() +
geom_smooth()
head
tickler <- read.csv(file='../data/raw/Tickler_PlosOne/S1Dataset.csv', header=TRUE, sep=",")
head(tickler)
ggplot(tickler, aes(x=TA, CAR2))
ggplot(tickler, aes(x=TA, CAR2)) +
geom_point()
ggplot(tickler, aes(x=TA, CAR2)) +
geom_point() +
geom_smooth()
ggplot(tickler, aes(x=TA, CAR2)) +
geom_point() +
geom_smooth() +
ylim(0,60)
ggplot(tickler, aes(x=TA, CAR2)) +
geom_point() +
geom_smooth() +
ylim(0,50)
ggplot(tickler, aes(x=TA, CAR2)) +
geom_point() +
geom_line() +
ylim(0,50)
ggplot(tickler, aes(x=TA, CAR2)) +
geom_point() +
geom_smooth() +
ylim(0,50)
fishes_maxN_data_long %>%
filter(Full.Species == "Lutjanidae Lutjanus bohar") %>%
group_by(OpCode) %>%
summarize(Haemulidae_Sum_MaxN = sum(MaxN)) %>%
left_join(sharks, by= "OpCode") %>%
drop_na(Haemulidae_Sum_MaxN) %>%
ggplot(aes(y= Haemulidae_Sum_MaxN , x= Shark_Sum_MaxN)) +
geom_point() +
geom_smooth()
fishes_maxN_data_long %>%
filter(Full.Species == "Lutjanidae Lutjanus gibbus") %>%
group_by(OpCode) %>%
summarize(Haemulidae_Sum_MaxN = sum(MaxN)) %>%
left_join(sharks, by= "OpCode") %>%
drop_na(Haemulidae_Sum_MaxN) %>%
ggplot(aes(y= Haemulidae_Sum_MaxN , x= Shark_Sum_MaxN)) +
geom_point() +
geom_smooth()
fishes_maxN_data_long %>%
filter(Full.Species == "Lutjanidae Lutjanus bohar") %>%
group_by(OpCode) %>%
summarize(Bohar_Sum_MaxN = sum(MaxN)) %>%
left_join(sharks, by= "OpCode") %>%
drop_na(Bohar_Sum_MaxN) %>%
ggplot(aes(y= Bohar_Sum_MaxN , x= Shark_Sum_MaxN)) +
geom_point() +
geom_smooth()
fishes_maxN_data_long %>%
filter(Full.Species == "Lutjanidae Lutjanus gibbus") %>%
group_by(OpCode) %>%
summarize(Gibbus_Sum_MaxN = sum(MaxN)) %>%
left_join(sharks, by= "OpCode") %>%
drop_na(Gibbus_Sum_MaxN) %>%
ggplot(aes(y= Gibbus_Sum_MaxN , x= Shark_Sum_MaxN)) +
geom_point() +
geom_smooth()
head(SharkComplete)
head(SharkComplete)
# Plot: Mean Max N by species
SharkComplete %>%
group_by(Species) %>%
summarize(mean_maxN = mean(MaxN)) %>%
ggplot(aes(reorder(Species, -mean_maxN), mean_maxN, fill= Species)) +
geom_bar(stat= 'identity') +
theme_pubr() +
theme(axis.text.x = element_blank()) +
labs(x="Species", y= "Mean MaxN") +
ggtitle("\n\nMean MaxN by Species")
# Make the data wide
SharkComplete %>%
pivot_wider(names_from = Species, values_from= MaxN )
# Make the data wide
sharks_wide <- SharkComplete %>%
pivot_wider(names_from = Species, values_from= MaxN )
sharks_wide
# Make the data wide
sharks_wide <- SharkComplete %>%
select(OpCode, Region, Island, Lat, Long, Family, Genus, Time.to.bait.loss..min., Total.deployment.time..min., Depth)
# Make the data wide
sharks_wide <- SharkComplete %>%
select(OpCode, Region, Island, Lat, Long, Family, Genus, Time.to.bait.loss..min., Total.deployment.time..min., Depth) %>%
pivot_wider(names_from = Species, values_from= MaxN )
# Make the data wide
sharks_wide <- SharkComplete %>%
select(OpCode, Region, Island, Lat, Long,
Family, Genus, Time.to.bait.loss..min.,
Total.deployment.time..min., Depth) %>%
pivot_wider(names_from = Species, values_from= MaxN )
# Make the data wide
sharks_wide <- SharkComplete %>%
dplyr::select(OpCode, Region, Island, Lat, Long,
Family, Genus, Time.to.bait.loss..min.,
Total.deployment.time..min., Depth) %>%
pivot_wider(names_from = Species, values_from= MaxN )
# Make the data wide
sharks_wide <- SharkComplete %>%
dplyr::select(OpCode, Region, Island, Lat, Long,
Family, Genus, Time.to.bait.loss..min.,
Total.deployment.time..min., Depth, Species, MaxN) %>%
pivot_wider(names_from = Species, values_from= MaxN )
sharks_wide
# Make the data wide
sharks_wide <- SharkComplete %>%
group_by(OpCode) %>%
dplyr::select(OpCode, Region, Island, Lat, Long,
Family, Genus, Time.to.bait.loss..min.,
Total.deployment.time..min., Depth, Species, MaxN) %>%
pivot_wider(names_from = Species, values_from= MaxN )
sharks_wide
# Make the data wide
sharks_wide <- SharkComplete %>%
dplyr::select(OpCode, Region, Island, Lat, Long,
Family, Genus, Time.to.bait.loss..min.,
Total.deployment.time..min., Depth, Species, MaxN) %>%
group_by(OpCode) %>%
pivot_wider(names_from = Species, values_from= MaxN )
sharks_wide
# Make the data wide
sharks_wide <- SharkComplete %>%
dplyr::select(OpCode, Region, Island, Lat, Long,
Family, Genus, Time.to.bait.loss..min.,Depth, Species, MaxN) %>%
pivot_wider(names_from = Species, values_from= MaxN )
sharks_wide
ggplot(sharks_wide, aes(x= amblyrhynchos, y= obesus))
ggplot(sharks_wide, aes(x= amblyrhynchos, y= obesus)) + geom_point()
ggplot(sharks_wide, aes(x= amblyrhynchos, y= obesus)) +
geom_point() +
geom_smooth()
library(vegan)
head(SharkComplete)
# Convert from long to wide
test <- dplyr::select(SharkComplete, OpCode, Region, Species, MaxN)
SharkComplete_wide <- spread(test, Species, MaxN) # why do we get a bunch of NAs
# NOTE: haven't transformed the data
# Create a Dissimilarity Matrix
# We have some empty rows (i.e. bruvs with 0 sharks, so we need to remove them)
SharkComplete_vegan <- SharkComplete_wide %>% filter(rowSums(SharkComplete_wide[, 3:6])!=0)
# 89 rows now instead of 95
SharkComplete_matrix <-vegdist(as.matrix(SharkComplete_vegan[-c(1:2)]), method='bray')
sharkMDS<-metaMDS(SharkComplete_matrix, distance = "bray", k = 2)
MDS_xy <- data.frame(sharkMDS$points)
sharkMDS$stress # 0.1674133
ggplot(MDS_xy, aes(MDS1, MDS2, col=SharkComplete_vegan$Region)) + geom_point() + theme_bw()+ theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + ggtitle('stress:0.167')
# lol omg
adon.results<-adonis(SharkComplete_vegan[3:6] ~ Region, method="bray",perm=999, data=SharkComplete_vegan)
print(adon.results) # yes there is a slight significant difference
ggplot(sharks_wide, aes(x= amblyrhynchos, y= melanopterus)) +
geom_point() +
geom_smooth()
ggplot(sharks_wide, aes(x= amblyrhynchos, y= ferrugineus)) +
geom_point() +
geom_smooth()
ggplot(sharks_wide, aes(x= amblyrhynchos, y= obesus)) +
geom_point() +
geom_smooth()
ggplot(sharks_wide, aes(x= amblyrhynchos, y= melanopterus)) +
geom_point() +
geom_smooth()
ggplot(sharks_wide, aes(x= amblyrhynchos, y= ferrugineus)) +
geom_point() +
geom_smooth()
# load libraries
library(dplyr);library(ggplot2);library(ggpubr);library(tidyr);library(car)
load("../data/created/SharkComplete.RData")
# Filter out drops at only near the tiles sites
SharkComplete_tiles <- SharkComplete %>%
filter(!Island %in% c("North of Petite Ile Coquillage", "South of Ile Yeye")) %>%
# get rid of PB sites away from our tiles
filter(Region != "Eagle Island")
