# Models
library(lmerTest)
lmerTest::coefs(mod1)
lmerTest::coef(summary(mod1))
anova(mod1)
mod1 <- glmmTMB(Coral ~ Herbivores.avg, family=beta(), data= model_data)
# Coral
mod1 <- lmerTest::lmer(sqrt(Coral) ~ sqrt(Herbivores.avg), data= model_data)
# Coral
mod1 <- lm(sqrt(Coral) ~ sqrt(Herbivores.avg), data= model_data)
simres <- simulateResiduals(mod1)
plot(simres) # issues
plot(mod1)
# Coral
mod1 <- lm(asin(sqrt(Coral)) ~ asin(sqrt(Herbivores.avg)), data= model_data)
# Coral
mod1 <- lm(asin(sqrt(Coral)) ~ asin(sqrt(Herbivores.avg)), data= model_data)
# Coral
mod1 <- lm(log(Coral+1) ~ Herbivores.avg, data= model_data)
summary(mod1) # higher herbivores is related to negative coral cover
simres <- simulateResiduals(mod1)
plot(simres) # issues
# Coral
mod1 <- lm(log(Coral+1) ~ log(Herbivores.avg+1), data= model_data)
summary(mod1) # higher herbivores is related to negative coral cover
simres <- simulateResiduals(mod1)
plot(simres) # issues
plot(mod1)
mod1 <- rlmer(Coral ~ Herbivores.avg + (1|Atoll.x), data= model_data)
mod1 <- rlmer(Coral ~ Herbivores.avg + (1|Atoll.x), data= model_data)
summary(mod1)
mod1 <- rlmer(Coral ~ Herbivores.avg + (1|Atoll.x), data= model_data)
coefs <- data.frame(coef(summary(mod1))))
coefs <- data.frame(coef(summary(mod1)))
coefs$p.z <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs
mod2 <- lme4::lmer(Coral ~ Herbivores.avg + (1|Atoll.x), data= model_data)
summary(mod2) # gives you the same results, just gives you a p-value
mod2 <- lmerTest::lmer(Coral ~ Herbivores.avg + (1|Atoll.x), data= model_data)
summary(mod2) # gives you the same results, just gives you a p-value
mod1 <- rlmer(Coral ~ Herbivores.avg + (1|Atoll.x), data= model_data)
mod1 <- rlmer(Coral ~ Herbivores.avg + (1|Atoll.x), data= model_data)
summary(mod1)
coefs <- data.frame(coef(summary(mod1)))
coefs$p.z <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs
library(sandwich)
library(clubsandwich)
library(clubSandwich)
mod <- lmer(Coral ~ Herbivores.avg + (1|Atoll.x), data= model_data)
model_parameters(
mod,
vcov = "vcovCR",
vcov_args = list(type = "CR1", cluster = model_data$Atoll.x)
)
library(clubSandwich)
model_parameters(
mod,
vcov = "vcovCR",
vcov_args = list(type = "CR1", cluster = model_data$Atoll.x)
)
library(Sandwich)
library(sandwich)
model_parameters(
mod,
vcov = "vcovCR",
vcov_args = list(type = "CR1", cluster = model_data$Atoll.x)
)
library(parameters)
model_parameters(
mod,
vcov = "vcovCR",
vcov_args = list(type = "CR1", cluster = model_data$Atoll.x)
)
model_parameters(
mod,
vcov = "vcovHC",
)
vcovHC(mod)
mod <- lmer(Coral ~ Herbivores.avg + (1|Atoll.x), data= model_data)
plot(mod)
library(DHARMa)
simres <- simulateResiduals(mod)
plot(simres) # issues
mod <- lmer(Coral ~ Herbivores.avg + (1|Atoll.x), data= model_data)
par(mfrow = c(2, 2))
plot(mod)
qqnorm(residuals(mod))
qqline(residuals(mod))
qqnorm(residuals(mod))
qqline(residuals(mod))
plot(mod) # residuals vs fitted = linearity (seems ok here)
plot(simres) # issues
plot(mod, type=c("p","smooth"), col.line=1)
plot(mod,
sqrt(abs(resid(.)))~fitted(.),
type=c("p","smooth"), col.line=1)
lattice::qqmath(lmer_model)
lattice::qqmath(mod)
plot(fm1, rstudent(.) ~ hatvalues(.))
plot(mod, type=c("p","smooth"), col.line=1)
plot(mod,
sqrt(abs(resid(.)))~fitted(.),
type=c("p","smooth"), col.line=1)
simres <- simulateResiduals(mod)
plot(simres) # issues
model_data$Herbivores.avg
str(model_data$Herbivores.avg)
mod <- lm(Coral ~ Herbivores.avg, data= model_data)
simres <- simulateResiduals(mod)
plot(simres) # issues
library("dplyr")
library("ggplot2")
library("tidyr")
library("vegan")
library("tibble")
library("ggpubr")
library("lme4")
data <- read.csv("../data/annotations.csv")
load("../../bruvs/data/created/mean.sum.shark.abundance.tiles.RData") # mean.shark.abundance.tiles
load(file = "../../dovs/data/created/fish.site.tiles.average.RData") # fish.site.tiles.average
load("../../grazing/data/bite.data.RData") # herbivore.bites.site
### WIDE DF ####
test <- data %>%
group_by(Atoll, Site, Transect,Quadrat) %>%
count(Label)
test <- as.data.frame(test)
test$Site.Transect.Quadrat <- paste(test$Site,test$Transect, test$Quadrat, sep=".")
benthic.wide <- test %>%
pivot_wider(names_from = Label,
values_from = n,
values_fill = 0)
dim(benthic.wide) # 240 quadrats (30 X 8 sites)
# Filter out cover categories we don't want to include
benthic.wide.clean <- benthic.wide %>%
dplyr::select(-c("*TAPE", "PVC", "OOQ", "MOBL"))
# Normalize by number of points
df1 <- benthic.wide.clean %>%
column_to_rownames(var="Site.Transect.Quadrat")%>%
dplyr::select(c("*CCAH":"OTH-SINV"))
rowSums(df1) # all close to 50
df2 <- decostand(df1, "total")
rowSums(df2) # 1
# this creates a df with normalized cover categories
# add back normalized data
meta <- benthic.wide.clean %>%
select(c(Atoll:Site.Transect.Quadrat))
benthic_wide <- df2 %>%
rownames_to_column("Site.Transect.Quadrat") %>%
left_join(meta, by="Site.Transect.Quadrat") %>%
select(c(Atoll:Quadrat), Site.Transect.Quadrat, "*CCAH":"OTH-SINV") %>%
# Rename and group the categories
mutate("CCA"= `*CCAH` + `*CCAR`) %>%
mutate("Macroalgae" = Macro +`*EMA` + `ENMA_RUB`) %>%
mutate("Turf" = `*TURFH` + `*TURFR` + `Turfsa` + `TurfsaR`) %>%
mutate("Invertebrates"= Sponge + `OTH-SINV`) %>%
mutate("Coral"= Hard + Soft) %>%
rename("Sand"= MGSU) %>%
rename("Unknown"=`*UNK`) %>%
select(c(Atoll:Site.Transect.Quadrat), "CCA", "Macroalgae",
"Turf", "Invertebrates", "Coral", "Sand", "Unknown")
dim(benthic_wide) #240 quadrats
#### LONG DF #####
benthic_long <- benthic_wide %>%
pivot_longer(-c(Atoll:Site.Transect.Quadrat), names_to = "Label")
benthic_wide %>%
summarize(across(c("CCA":"Sand"), mean))
# Plot relative abundance
benthic_long$Label <- factor(benthic_long$Label,
levels = c("CCA", "Macroalgae",
"Turf", "Coral",
"Invertebrates", "Sand", "Unknown"))
# Rename the sites
benthic_long$Site <- dplyr::recode(benthic_long$Site,
"Il Anglaise Seaward"= "Salomon seaward",
"Il Poule Seaward" = "Peros Banhos seaward",
"Il Anglaise Lagoon" = "Salomon lagoon",
"Il Poule Lagoon" = "Peros Banhos lagoon")
# Make teh data have the same x axis as the other plots
benthic_long$Site <- factor(benthic_long$Site,
levels=c("Middle Brother", "Nelson",
"Peros Banhos lagoon","Peros Banhos seaward",
"Salomon lagoon", "Salomon seaward",
"Il de rats", "Il Lubine"))
benthic_long$Atoll <- factor(benthic_long$Atoll, levels=c("Brothers", "Nelsons Island", "Peros Banhos",
"Salomon", "Egmont"))
p_benthic.cover <- benthic_long %>%
group_by(Site, Label) %>%
summarize(mean=mean(value))%>% # this gets rid of the white lines (same plot without it)
ggplot(aes(x = Site, y = mean, fill = Label)) +
geom_bar(position = "fill", stat = "identity") +
labs(x = "Site", y = "Percent Cover", fill = "Label") +
theme_pubr(base_size=16) +
scale_fill_manual(values = c("CCA" = "#e67388",
"Macroalgae" = "#30802f",
"Turf" = "#bdd54e",
"Coral" = "#794a94",
"Invertebrates" = "#5e5eff",
"Sand" = "#ffda5e",
"Unknown"="grey"))+
theme(axis.text.x=element_text(angle=45, hjust=1)) +
scale_x_discrete(labels=c("Il Lubine" = "Ile Lubine",
"Il de rats" = "Ile de rats"))
p_benthic.cover
ggsave(p_benthic.cover, file="../figures/benthic.cover.png",
width=10, height=10)
# Rename the sites
benthic_wide$Site <- dplyr::recode(benthic_wide$Site,
"Il Anglaise Seaward"= "Salomon seaward",
"Il Poule Seaward" = "Peros Banhos seaward",
"Il Anglaise Lagoon" = "Salomon lagoon",
"Il Poule Lagoon" = "Peros Banhos lagoon")
# Make teh data have the same x axis as the other plots
benthic_wide$Site <- factor(benthic_wide$Site,
levels=c("Middle Brother", "Nelson",
"Peros Banhos lagoon","Peros Banhos seaward",
"Salomon lagoon", "Salomon seaward",
"Il de rats", "Il Lubine"))
benthic_wide$Atoll <- factor(benthic_wide$Atoll, levels=c("Brothers", "Nelson", "Peros Banos",
"Salomon", "Egmont"))
p_benthic.coral <- benthic_wide%>%
group_by(Site) %>%
mutate(Coral.mean= mean(Coral),
Coral.SD = sd(Coral),
Coral.SE = Coral.SD/sqrt(length(Coral))) %>%
ggplot(aes(x=Site, y=Coral.mean, color=Atoll)) +
geom_point(size=6)+
geom_errorbar(aes(ymin = Coral.mean - Coral.SD,
ymax = Coral.mean + Coral.SD),
width=0.2) +
theme_pubr(base_size = 16) +
theme(axis.text.x = element_text(angle = 90)) +
theme(axis.text.x = element_blank())+
ylab("Coral Percent Cover") +
scale_color_manual(values= c("#440154FF","#3B528BFF","#21908CFF","#5DC863FF","#FDE725FF")) +
guides(col = "none")
p_benthic.coral
save(p_benthic.coral, file="../data/coral.by.site.RData")
ggsave(p_benthic.coral, file="../figures/benthic.coral.png",
width=10, height=10)
# Combine data with fishes and shark data
unique(benthic_wide$Site)
unique(benthic_wide$Atoll)
unique(mean.shark.abundance.tiles$Region)
unique(fish.site.tiles.average$Tile.Site)
unique(herbivore.bites.site$Site)
test <- benthic_wide %>%
mutate(Atoll = recode(Atoll, "Peros Banos" = "PerosBanhos")) %>%
mutate(Atoll = recode(Atoll, "Nelson" = "Nelson's Island")) %>%
mutate(Site =recode(Site, "Peros Banhos seaward" = "Peros Banhos Seaward")) %>%
mutate(Site =recode(Site, "Peros Banhos lagoon" = "Peros Banhos Lagoon"))
grazing <- herbivore.bites.site %>%
mutate(Site = recode(Site, "Il Anglaise Lagoon" = "Salomon lagoon")) %>%
mutate(Site = recode(Site, "Il Anglaise Seaward" = "Salomon seaward")) %>%
mutate(Site = recode(Site, "Il Poule Seaward" = "Peros Banhos Seaward"))
model_data <- test %>%
left_join(mean.shark.abundance.tiles, by=c('Atoll'='Region')) %>%
left_join(fish.site.tiles.average, by = c("Site" = "Tile.Site")) %>%
left_join(grazing, by= c("Site" = "Site") )
model_data <- test %>%
left_join(mean.shark.abundance.tiles, by=c('Atoll'='Region')) %>%
left_join(fish.site.tiles.average, by = c("Site" = "Tile.Site")) %>%
left_join(grazing, by= c("Site" = "Site") )
str(model_data)
model_data <- test %>%
left_join(mean.shark.abundance.tiles, by=c('Atoll'='Region')) %>%
left_join(fish.site.tiles.average, by = c("Site" = "Tile.Site")) %>%
left_join(grazing, by= c("Site" = "Site") ) %>%
select(-Atoll.y)
model_data <- test %>%
left_join(mean.shark.abundance.tiles, by=c('Atoll'='Region')) %>%
left_join(fish.site.tiles.average, by = c("Site" = "Tile.Site")) %>%
left_join(grazing, by= c("Site" = "Site") ) %>%
select(-Atoll.y) %>%
rename(Atoll.x = Atoll)
model_data <- test %>%
left_join(mean.shark.abundance.tiles, by=c('Atoll'='Region')) %>%
left_join(fish.site.tiles.average, by = c("Site" = "Tile.Site")) %>%
left_join(grazing, by= c("Site" = "Site") ) %>%
select(-Atoll.y) %>%
rename(Atoll = Atoll.x)
str(model_data)
# Coral and herbivores
coral_mod <- lmer(Coral ~ Herbivores.avg + (1|Atoll) , data= model_data)
summary(coral_mod)
# Coral and herbivores
coral_mod <- lmerTest::lmer(Coral ~ Herbivores.avg + (1|Atoll) , data= model_data)
summary(coral_mod)
# Model Diagnostics
library(DHARMa)
simres <- simulateResiduals(coral_mod)
plot(simres) # issues
plot(coral_mod, type=c("p","smooth"), col.line=1) # residuals vs fitted (with line), seems mainly linear
qqnorm(residuals(coral_mod)) # are the residuals normally distributed (meh-ish)
qqline(residuals(coral_mod))
plot(coral_mod,
sqrt(abs(resid(.)))~fitted(.),
type=c("p","smooth"), col.line=1) # scale location plot (homoskedasticity), not great
# Robust Linear Regression
robust_coral_mod <- rlmer(Coral ~ Herbivores.avg + (1|Atoll), data= model_data)
library(robustlmm) # robust linear regression
summary(robust_coral_mod)
# Robust Linear Regression
robust_coral_mod <- rlmer(Coral ~ Herbivores.avg + (1|Atoll), data= model_data)
# Robust Linear Regression
robust_coral_mod <- rlmer(Coral ~ Herbivores.avg + (1|Atoll), data= model_data)
summary(robust_coral_mod)
plot(robust_coral_mod)
performance::r2(robust_coral_mod)
# extract pvalues (another way of getting a pvalue)
coefs <- data.frame(coef(summary(robust_coral_mod)))
coefs$p.z <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs
# Another way to extract p-values
# get coefficients from non-robust model to extract Satterthwaite approximated DFs
coefs <- data.frame(coef(summary(coral_model)))
tab_model(robust_coral_mod) # this gives you a pvalue
library("sjPlot")
tab_model(robust_coral_mod) # this gives you a pvalue
summary(coral_mod)
# Remove PB lagoon because there is no grazing data
grazing_model_data <- model_data %>%
filter(Site != "Peros Banhos Lagoon")
# linear model
coral_mod.graze <- lmerTest::lmer(Coral ~ bites.per.min.grazeable.mean + (1|Atoll) , data= grazing_model_data)
summary(coral_mod.graze)
# Model Diagnostics
library(DHARMa)
simres <- simulateResiduals(coral_mod.graze)
plot(simres) # issues
plot(coral_mod.graze, type=c("p","smooth"), col.line=1) # residuals vs fitted (with line), seems okish
qqnorm(residuals(coral_mod.graze)) # are the residuals normally distributed (meh-ish)
qqline(residuals(coral_mod.graze))
plot(coral_mod.graze,
sqrt(abs(resid(.)))~fitted(.),
type=c("p","smooth"), col.line=1) # scale location plot (homoskedasticity), not great
# Robust Linear Regression
robust_coral_mod.graze <- rlmer(Coral ~ bites.per.min.grazeable.mean + (1|Atoll), data= grazing_model_data)
summary(robust_coral_mod.graze)
plot(robust_coral_mod.graze)
performance::r2(robust_coral_mod.graze)
tab_model(robust_coral_mod.graze) # this gives you a pvalue
library(lmerTest) # gives you a p-value from lmer
library(robustlmm) # robust linear regression
hist(model_data$Coral)
hist(model_data$Macroalgae)
# Coral and herbivores
coral_mod <- lmerTest::lmer(Coral ~ Herbivores.avg + (1|Atoll) , data= model_data)
summary(coral_mod)
# Model Diagnostics
library(DHARMa)
simres <- simulateResiduals(coral_mod)
plot(simres) # issues
plot(coral_mod, type=c("p","smooth"), col.line=1) # residuals vs fitted (with line), seems mainly linear (this looks at linearity)
qqnorm(residuals(coral_mod)) # are the residuals normally distributed (meh-ish)
qqline(residuals(coral_mod))
plot(coral_mod,
sqrt(abs(resid(.)))~fitted(.),
type=c("p","smooth"), col.line=1) # scale location plot (homoskedasticity), not great
# so lets apply a robust regression because we have issues that seem to revolve around heteroskedasticity
# Robust Linear Regression
robust_coral_mod <- rlmer(Coral ~ Herbivores.avg + (1|Atoll), data= model_data)
summary(robust_coral_mod)
plot(robust_coral_mod) # seems to look the same as lmer
performance::r2(robust_coral_mod)
tab_model(robust_coral_mod) # this gives you a pvalue
# extract pvalues (another way of getting a pvalue)
coefs <- data.frame(coef(summary(robust_coral_mod)))
coefs$p.z <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs
# Another way to extract p-values
# get coefficients from non-robust model to extract Satterthwaite approximated DFs
coefs <- data.frame(coef(summary(coral_model)))
# Another way to extract p-values
# get coefficients from non-robust model to extract Satterthwaite approximated DFs
coefs <- data.frame(coef(summary(coral_model)))
# Another way to extract p-values
# get coefficients from non-robust model to extract Satterthwaite approximated DFs
coefs <- data.frame(coef(summary(coral_mod)))
# get coefficients from robust model to extract t-values
coefs.robust <- coef(summary(robust_coral_model))
# get coefficients from robust model to extract t-values
coefs.robust <- coef(summary(robust_coral_mod))
# calculate p-values based on robust t-values and non-robust approx. DFs
p.values <- 2*pt(abs(coefs.robust[,3]), coefs$df, lower=FALSE)
p.values
# Remove PB lagoon because there is no grazing data
grazing_model_data <- model_data %>%
filter(Site != "Peros Banhos Lagoon")
# linear model
coral_mod.graze <- lmerTest::lmer(Coral ~ bites.per.min.grazeable.mean + (1|Atoll) , data= grazing_model_data)
summary(coral_mod.graze)
# Model Diagnostics
library(DHARMa)
simres <- simulateResiduals(coral_mod.graze)
plot(simres) # issues
plot(coral_mod.graze, type=c("p","smooth"), col.line=1) # residuals vs fitted (with line)
qqnorm(residuals(coral_mod.graze)) # are the residuals normally distributed (meh-ish)
qqline(residuals(coral_mod.graze))
plot(coral_mod.graze,
sqrt(abs(resid(.)))~fitted(.),
type=c("p","smooth"), col.line=1) # scale location plot (homoskedasticity), not great
# so lets apply a robust regression again
# Robust Linear Regression
robust_coral_mod.graze <- rlmer(Coral ~ bites.per.min.grazeable.mean + (1|Atoll), data= grazing_model_data)
summary(robust_coral_mod.graze)
plot(robust_coral_mod.graze)
performance::r2(robust_coral_mod.graze)
tab_model(robust_coral_mod.graze) # this gives you a pvalue
# extract pvalues (another way of getting a pvalue)
coefs <- data.frame(coef(summary(robust_coral_mod.graze)))
coefs$p.z <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs
# Another way to extract p-values
# get coefficients from non-robust model to extract Satterthwaite approximated DFs
coefs <- data.frame(coef(summary(coral_mod.graze)))
# get coefficients from robust model to extract t-values
coefs.robust <- coef(summary(robust_coral_mod.graze))
# calculate p-values based on robust t-values and non-robust approx. DFs
p.values <- 2*pt(abs(coefs.robust[,3]), coefs$df, lower=FALSE)
p.values
# Another way to extract p-values
# get coefficients from non-robust model to extract Satterthwaite approximated DFs
coefs <- data.frame(coef(summary(coral_mod.graze)))
# Macroalgae
algae_mod <- lmerTest::lmer(Macroalgae ~ Herbivores.avg + (1|Atoll), data= grazing_mo)
# Macroalgae
algae_mod <- lmerTest::lmer(Macroalgae ~ Herbivores.avg + (1|Atoll), data= grazing_model_data)
summary(algae_mod) # higher herbivores is positively related to high algae cover
# Macroalgae
algae_mod <- lmerTest::lmer(Macroalgae ~ Herbivores.avg + (1|Atoll), data= grazing_model_data)
# Model Fit
library(DHARMa)
simres <- simulateResiduals(algae_mod)
plot(simres) # issues
plot(algae_mod, type=c("p","smooth"), col.line=1) # residuals vs fitted (with line)
qqnorm(residuals(algae_mod)) # are the residuals normally distributed (meh-ish)
qqline(residuals(algae_mod))
qqnorm(residuals(algae_mod)) # are the residuals normally distributed (meh-ish)
qqline(residuals(algae_mod))
plot(algae_mod,
sqrt(abs(resid(.)))~fitted(.),
type=c("p","smooth"), col.line=1) # scale location plot (homoskedasticity), not great
# Robust Linear Regression
robust_algae_mod <- rlmer(Macroalgae ~ Herbivores.avg + (1|Atoll), data= model_data)
summary(robust_algae_mod)
plot(robust_algae_mod)
performance::r2(robust_algae_mod)
tab_model(robust_algae_mod) # this gives you a pvalue
# extract pvalues (another way of getting a pvalue)
coefs <- data.frame(coef(summary(robust_algae_mod)))
coefs$p.z <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs
# Another way to extract p-values
# get coefficients from non-robust model to extract Satterthwaite approximated DFs
coefs <- data.frame(coef(summary(algae_mod)))
coefs
# extract pvalues (another way of getting a pvalue)
coefs <- data.frame(coef(summary(robust_algae_mod)))
coefs$p.z <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs
# get coefficients from robust model to extract t-values
coefs.robust <- coef(summary(robust_algae_mod))
# calculate p-values based on robust t-values and non-robust approx. DFs
p.values <- 2*pt(abs(coefs.robust[,3]), coefs$df, lower=FALSE)
# get coefficients from robust model to extract t-values
coefs.robust <- coef(summary(robust_algae_mod))
# calculate p-values based on robust t-values and non-robust approx. DFs
p.values <- 2*pt(abs(coefs.robust[,3]), coefs$df, lower=FALSE)
# Macroalgae
algae_mod <- lmerTest::lmer(Macroalgae ~ Herbivores.avg + (1|Atoll), data= grazing_model_data)
summary(algae_mod) # higher herbivores is positively related to high algae cover
# Model Fit
library(DHARMa)
simres <- simulateResiduals(algae_mod)
plot(simres) # issues
plot(algae_mod, type=c("p","smooth"), col.line=1) # residuals vs fitted (with line)
qqnorm(residuals(algae_mod)) # are the residuals normally distributed (meh-ish)
qqline(residuals(algae_mod))
plot(algae_mod,
sqrt(abs(resid(.)))~fitted(.),
type=c("p","smooth"), col.line=1) # this looks good
# but there is enough messiness lets apply a robust regression again
# Robust Linear Regression
robust_algae_mod <- rlmer(Macroalgae ~ Herbivores.avg + (1|Atoll), data= model_data)
summary(robust_algae_mod)
plot(robust_algae_mod)
performance::r2(robust_algae_mod)
tab_model(robust_algae_mod) # this gives you a pvalue
# extract pvalues (another way of getting a pvalue)
coefs <- data.frame(coef(summary(robust_algae_mod)))
coefs$p.z <- 2 * (1 - pnorm(abs(coefs$t.value)))
coefs
# Another way to extract p-values
# get coefficients from non-robust model to extract Satterthwaite approximated DFs
coefs <- data.frame(coef(summary(algae_mod)))
# get coefficients from robust model to extract t-values
coefs.robust <- coef(summary(robust_algae_mod))
# calculate p-values based on robust t-values and non-robust approx. DFs
p.values <- 2*pt(abs(coefs.robust[,3]), coefs$df, lower=FALSE)
p.values
p.values
mod5 <- lmerTest::lmer(Macroalgae ~ bites.per.min.grazeable.mean + (1|Atoll), data= grazing_model_data) # singular
algae_mod_graze <- lmerTest::lmer(Macroalgae ~ bites.per.min.grazeable.mean + (1|Atoll), data= grazing_model_data) # singular
algae_mod_graze_lm <- lm(Macroalgae ~ bites.per.min.grazeable.mean, data= grazing_model_data)
summary(mod6) # higher herbivores bites is related to higher algae percent cover
algae_mod_graze <- lmerTest::lmer(Macroalgae ~ bites.per.min.grazeable.mean + (1|Atoll), data= grazing_model_data) # singular
algae_mod_graze_lm <- lm(Macroalgae ~ bites.per.min.grazeable.mean, data= grazing_model_data)
summary(algae_mod_graze_lm) # higher herbivores bites is related to higher algae percent cover
plot(algae_mod_graze_lm) # seems ok
# Model Diagnostics
plot(algae_mod_graze_lm) # seems ok
