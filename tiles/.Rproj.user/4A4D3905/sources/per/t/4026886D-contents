---
title: "Percent Cover Analysis"
author: "Jamie McDevitt-Irwin"
date: '2022-10-26'
output: html_document
---

Dependencies: tile-cover-data-cleaning.RMD



# Packages
```{r}
library(tidyverse)
library(vegan)
library(ggpubr)
library(dplyr)
library(ggplot2)
library(vegan)
remotes::install_github("jfq3/ggordiplots")
library(ggordiplots)
library(plotly)
library(effsize)
library(glmmTMB)
library(DHARMa)
library(indicspecies)
```



# Plots
```{r}
##### Relative Abundance #####
##############################
# Change order levels 
broad.cover_long$Category <- factor(broad.cover_long$Category, levels=c("CCA", "Macroalgae", "Turf", 
"Coral", "Invertebrates", "Sediment", "Bare", "Unknown"))


p_relabund_treatment <- broad.cover_long %>%
  ggplot(aes(x=as.factor(Treatment), y=Count, fill=Category, color=Category)) + 
  geom_bar(stat="identity", position="fill") +
  theme_pubr(base_size= 16)+ 
  theme(legend.position="right") +
  labs(x = "Treatment", y="Relative Abundance") +
  ggtitle("b)") +
  # color and fill gets rid of the white lines
  scale_fill_manual(values = c("CCA" = "#e67388",
                                         "Macroalgae" = "#30802f",
                                         "Turf" = "#bdd54e",
                                         "Coral" = "#794a94",
                                         "Invertebrates" = "#5e5eff",
                                         "Sediment" = "#ffda5e",
                               "Bare"= "orange",
                               "Unknown"= "grey"))+
  scale_color_manual(values = c("CCA" = "#e67388",
                                         "Macroalgae" = "#30802f",
                                         "Turf" = "#bdd54e",
                                         "Coral" = "#794a94",
                                         "Invertebrates" = "#5e5eff",
                                         "Sediment" = "#ffda5e",                     
                               "Bare"= "orange",
                               "Unknown"= "grey"))

p_relabund_treatment

ggsave(file= "../figures/barplot-relabund-treatment-broad.png",
       plot=p_relabund_treatment, height=8, width=10)





###### NMDS ########
#####################
data.mds <- metaMDS(broad.cover_wide[17:24], distance = "bray")
data.mds 
data.mds$stress # 0.106701
stressplot(data.mds) # Shepard plot 


# Significant Species
spp.fit <- envfit(data.mds, broad.cover_wide[17:24], permutations = 999) # this fits species vectors
spp.scrs <- as.data.frame(scores(spp.fit, display = "vectors")) #save species intrinsic values into dataframe
spp.scrs <- cbind(spp.scrs, Species = rownames(spp.scrs)) #add species names to dataframe
spp.scrs <- cbind(spp.scrs, pval = spp.fit$vectors$pvals) #add pvalues to dataframe so you can select species which are significant
#spp.scrs<- cbind(spp.scrs, abrev = abbreviate(spp.scrs$Species, minlength = 6)) #abbreviate species names
sig.spp.scrs <- subset(spp.scrs, pval<0.05) #subset data to show species significant at 0.05

head(sig.spp.scrs)
sig.spp.scrs



plot <- gg_ordiplot(data.mds, 
                    groups= broad.cover_wide$Treatment, 
                    hull=FALSE, ellipse=TRUE, spiders=FALSE,
                    kind="sd", pt.size=4) 
plot


# refine the plot (you can pull out "plot" from the gg_ordiplot call)
p_nmds.broad <- plot$plot + 
  theme_bw()+ 
  theme(panel.grid.major = element_blank(), 
        panel.grid.minor = element_blank(),
        legend.position= "none") + 
  labs(colour= "Treatment") +
  theme_pubr(base_size = 16)+
  geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2), 
               arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
  ggrepel::geom_text_repel(data = sig.spp.scrs, 
                           aes(x=NMDS1, y=NMDS2, label = Species), 
                           cex = 4, direction = "both", segment.size = 0.25)+ 
    scale_colour_hue(h = c(180, 300)) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
 #annotate(geom="text", label="a)", y=1.5, x=-1.1, size=6)
  ggtitle("a)") +
  theme(legend.position="bottom")

p_nmds.broad



ggsave(file= "../figures/nmds-broad-categories.png",
       plot=p_nmds.broad, height=8, width=10)

save(p_nmds.broad, file="../data/created-data/NMDS-broad-categories.RData")




# Combine barplots and NMDS
p_fig4 <- ggarrange(p_nmds.broad, p_relabund_treatment)
p_fig4
ggsave(p_fig4, file="../figures/nmds-barplot.png",
       height=7,width=11)
```
 
 


# Effect Size
These are plots for figure 2. 
```{r}
# Prep the data to calculate effect sizes
broad.cover_wide$Site <- factor(broad.cover_wide$Site, 
                           levels=c("Middle Brother", 
                                    "Nelson", 
                                    "Peros Banhos Lagoon", 
                                    "Peros Banhos Seaward",
                                    "Salomon lagoon", 
                                    "Salomon seaward", 
                                    "Il de rats", 
                                    "Il Lubine"))

broad.cover_wide$Island <- factor(broad.cover_wide$Island, 
                                  levels=c("Middle Brother", 
                                           "Nelson", 
                                           "Peros Banos", 
                                           "Salomon", 
                                           "Egmont"))

effectsize.df <- broad.cover_wide %>%
  filter(Treatment != "Partial") 
effectsize.df$Treatment <- factor(effectsize.df$Treatment, 
                                  levels = c("Uncaged","Caged"))
effectsize.df <- as.data.frame(effectsize.df) 
```



## CCA
```{r}

## Calculate the effect size for each site
cca.es <- with(effectsize.df,
            by(effectsize.df, Tile.Site,
               function(x) cohen.d(x$CCA, x$Treatment, hedges.correction = TRUE)))


# Save the data for each site
hedges.cca.pb.lagoon <- cca.es$`Peros Banhos Lagoon`
hedges.cca.pb.seaward  <- cca.es$`Peros Banhos Seaward`
hedges.cca.salo.seaward <- cca.es$`Salomon seaward`
hedges.cca.salo.lagoon <- cca.es$`Salomon lagoon`
hedges.cca.nelson <- cca.es$Nelson
hedges.cca.midbro <- cca.es$`Middle Brother`
hedges.cca.rats <-cca.es$`Il de rats`
hedges.cca.lubine <-cca.es$`Il Lubine`

# Combine
Site <- c("Peros Banhos Lagoon", "Peros Banhos Seaward", "Salomon Seaward", "Salomon Lagoon", "Nelson", "Middle Brother", "Il de rats", "Il lubine")

cca.estimate <- c(hedges.cca.pb.lagoon$estimate, 
                  hedges.cca.pb.seaward$estimate, 
                  hedges.cca.salo.seaward$estimate, 
                  hedges.cca.salo.lagoon$estimate, 
                  hedges.cca.nelson$estimate, 
                  hedges.cca.midbro$estimate, 
                  hedges.cca.rats$estimate, 
                  hedges.cca.lubine$estimate)

cca.sd <- c(hedges.cca.pb.lagoon$sd, 
            hedges.cca.pb.seaward$sd, 
            hedges.cca.salo.seaward$sd, 
            hedges.cca.salo.lagoon$sd, 
            hedges.cca.nelson$sd, 
            hedges.cca.midbro$sd, 
            hedges.cca.rats$sd, 
            hedges.cca.lubine$sd)

hedges.cca.df <- as.data.frame(cbind(Site, cca.estimate, cca.sd))
hedges.cca.df$cca.estimate <- as.numeric(hedges.cca.df$cca.estimate)
hedges.cca.df$cca.sd <- as.numeric(hedges.cca.df$cca.sd)



# Prep the data so it has the same colors as the bruvs data
hedges.cca.plot <- hedges.cca.df %>%
  mutate(Atoll = ifelse(Site == "Peros Banhos Lagoon", "Peros Banhos", 
                        ifelse(Site == "Peros Banhos Seaward", "Peros Banhos",
                        ifelse(Site == "Salomon Seaward", "Salomon",
                               ifelse(Site == "Salomon Lagoon", "Salomon",
                                      ifelse(Site == "Nelson", "Nelson",
                                             ifelse(Site== "Middle Brother", "Brothers",
                                                    "Egmont")))))))


hedges.cca.plot$Atoll <- factor(hedges.cca.plot$Atoll, 
                            levels=c("Brothers", "Nelson", 
                                     "Peros Banhos", "Salomon", "Egmont"))


# Calculate grand mean
cca.mean <- hedges.cca.plot %>%
  summarize(mean=mean(cca.estimate),
            sd=sd(cca.estimate))

# add back to data
hedges.cca.plot <- hedges.cca.plot %>%
  add_row(Site="Overall", cca.estimate=cca.mean$mean, cca.sd=cca.mean$sd, Atoll=NA)

hedges.cca.plot$Site <- factor(hedges.cca.plot$Site, 
                           levels=c("Middle Brother", "Nelson", 
                                    "Peros Banhos Lagoon", 
                                    "Peros Banhos Seaward", 
                                    "Salomon Lagoon", "Salomon Seaward", 
                                    "Il de rats", "Il lubine", 
                                    "Overall"))


# Effect size by site
p_tiles.cca.effectsize <- ggplot(hedges.cca.plot, 
                                 aes(x=Site, y=cca.estimate, col=Atoll)) +
   geom_point(size=c(6,6,6,6,6,6,6,6,9), shape=(values=c(19,19,19,19,19,19,19,19,18)))+
  geom_errorbar(aes(ymin = cca.estimate-cca.sd, 
                    ymax = cca.estimate+cca.sd), 
                width=0.2) +
  labs (x= "", y= "CCA Effect Size") +
  theme_pubr() +
  geom_hline(yintercept= 0, linetype=2) +
    theme_pubr(base_size = 16) + 
  theme(axis.text.x = element_blank())+
  scale_color_manual(values= c("#440154FF","#3B528BFF","#21908CFF","#5DC863FF","#FDE725FF", "black")) +
  guides(col = "none", shape="none")+
  geom_vline(xintercept=8.5, linetype="dashed")

p_tiles.cca.effectsize



ggsave(p_tiles.cca.effectsize,
       file="../figures/cca-effect-size.png",
       height=5, width=7)
save(p_tiles.cca.effectsize, file="../data/cca-effect-size.RData")

```


## Macroalgae
```{r}
## Calculate the effect size for each site
macro.es <- with(effectsize.df,
            by(effectsize.df, Tile.Site,
               function(x) cohen.d(x$Macroalgae, x$Treatment, hedges.correction = TRUE)))


# Save the data for each site
hedges.macro.pb.lagoon <- macro.es$`Peros Banhos Lagoon`
hedges.macro.pb.seaward  <- macro.es$`Peros Banhos Seaward`
hedges.macro.salo.seaward <- macro.es$`Salomon seaward`
hedges.macro.salo.lagoon <- macro.es$`Salomon lagoon`
hedges.macro.nelson <- macro.es$Nelson
hedges.macro.midbro <- macro.es$`Middle Brother`
hedges.macro.rats <-macro.es$`Il de rats`
hedges.macro.lubine <-macro.es$`Il Lubine`

# Combine
Site <- c("Peros Banhos Lagoon", "Peros Banhos Seaward", "Salomon Seaward", "Salomon Lagoon", "Nelson", "Middle Brother", "Il de rats", "Il lubine")

macro.estimate <- c(hedges.macro.pb.lagoon$estimate, 
                  hedges.macro.pb.seaward$estimate, 
                  hedges.macro.salo.seaward$estimate, 
                  hedges.macro.salo.lagoon$estimate, 
                  hedges.macro.nelson$estimate, 
                  hedges.macro.midbro$estimate, 
                  hedges.macro.rats$estimate, 
                  hedges.macro.lubine$estimate)

macro.sd <- c(hedges.macro.pb.lagoon$sd, 
            hedges.macro.pb.seaward$sd, 
            hedges.macro.salo.seaward$sd, 
            hedges.macro.salo.lagoon$sd, 
            hedges.macro.nelson$sd, 
            hedges.macro.midbro$sd, 
            hedges.macro.rats$sd, 
            hedges.macro.lubine$sd)

hedges.macro.df <- as.data.frame(cbind(Site, macro.estimate, macro.sd))
hedges.macro.df$macro.estimate <- as.numeric(hedges.macro.df$macro.estimate)
hedges.macro.df$macro.sd <- as.numeric(hedges.macro.df$macro.sd)




# Prep the data so it has the same colors as the bruvs data
hedges.macro.plot <- hedges.macro.df %>%
  mutate(Atoll = ifelse(Site == "Peros Banhos Lagoon", "Peros Banhos", 
                        ifelse(Site == "Peros Banhos Seaward", "Peros Banhos",
                        ifelse(Site == "Salomon Seaward", "Salomon",
                               ifelse(Site == "Salomon Lagoon", "Salomon",
                                      ifelse(Site == "Nelson", "Nelson",
                                             ifelse(Site== "Middle Brother", "Brothers",
                                                    "Egmont")))))))

hedges.macro.plot$Atoll <- factor(hedges.macro.plot$Atoll, 
                                  levels=c("Brothers", "Nelson",
                                           "Peros Banhos", "Salomon", "Egmont"))



# Calculate grand mean
macro.mean <- hedges.macro.plot %>%
  summarize(mean=mean(macro.estimate),
            sd=sd(macro.estimate))

# add back to data
hedges.macro.plot <- hedges.macro.plot %>%
  add_row(Site="Overall", 
          macro.estimate=macro.mean$mean,
          macro.sd=macro.mean$sd, Atoll=NA)


hedges.macro.plot$Site <- factor(hedges.macro.plot$Site, 
                           levels=c("Middle Brother", "Nelson", "Peros Banhos Lagoon", 
"Peros Banhos Seaward", 
"Salomon Lagoon", "Salomon Seaward", "Il de rats", "Il lubine", "Overall"))



# Effect size by site
p_tiles.algae.effectsize <- ggplot(hedges.macro.plot, 
                                   aes(x=Site, y=macro.estimate, col=Atoll)) +
   geom_point(size=c(6,6,6,6,6,6,6,6,9), 
              shape=(values=c(19,19,19,19,19,19,19,19,18)))+
  geom_errorbar(aes(ymin = macro.estimate-macro.sd, 
                    ymax = macro.estimate+macro.sd), 
                width=0.2) +
  labs (x= "", y= "Macroalgae Effect Size") +
  theme_pubr() +
  geom_hline(yintercept= 0, linetype=2) +
    theme_pubr(base_size = 16) + 
  theme(axis.text.x = element_blank())+
  scale_color_manual(values= c("#440154FF","#3B528BFF","#21908CFF","#5DC863FF","#FDE725FF")) +
  guides(col = "none",shape="none")+
  geom_vline(xintercept=8.5, linetype="dashed")

p_tiles.algae.effectsize


ggsave(p_tiles.algae.effectsize,
       file="../figures/algae-effect-size.png",
       height=5, width=7)
save(p_tiles.algae.effectsize, file="../data/algae-effect-size.RData")

```



## Turf
```{r}
## Calculate the effect size for each site
turf.es <- with(effectsize.df,
            by(effectsize.df, Tile.Site,
               function(x) cohen.d(x$Turf, x$Treatment, hedges.correction = TRUE)))


# Save the data for each site
hedges.turf.pb.lagoon <- turf.es$`Peros Banhos Lagoon`
hedges.turf.pb.seaward  <- turf.es$`Peros Banhos Seaward`
hedges.turf.salo.seaward <- turf.es$`Salomon seaward`
hedges.turf.salo.lagoon <- turf.es$`Salomon lagoon`
hedges.turf.nelson <- turf.es$Nelson
hedges.turf.midbro <- turf.es$`Middle Brother`
hedges.turf.rats <-turf.es$`Il de rats`
hedges.turf.lubine <-turf.es$`Il Lubine`

# Combine
Site <- c("Peros Banhos Lagoon", "Peros Banhos Seaward", "Salomon Seaward", "Salomon Lagoon", "Nelson", "Middle Brother", "Il de rats", "Il lubine")

turf.estimate <- c(hedges.turf.pb.lagoon$estimate, 
                  hedges.turf.pb.seaward$estimate, 
                  hedges.turf.salo.seaward$estimate, 
                  hedges.turf.salo.lagoon$estimate, 
                  hedges.turf.nelson$estimate, 
                  hedges.turf.midbro$estimate, 
                  hedges.turf.rats$estimate, 
                  hedges.turf.lubine$estimate)

turf.sd <- c(hedges.turf.pb.lagoon$sd, 
            hedges.turf.pb.seaward$sd, 
            hedges.turf.salo.seaward$sd, 
            hedges.turf.salo.lagoon$sd, 
            hedges.turf.nelson$sd, 
            hedges.turf.midbro$sd, 
            hedges.turf.rats$sd, 
            hedges.turf.lubine$sd)

hedges.turf.df <- as.data.frame(cbind(Site, turf.estimate, turf.sd))
hedges.turf.df$turf.estimate <- as.numeric(hedges.turf.df$turf.estimate)
hedges.turf.df$turf.sd <- as.numeric(hedges.turf.df$turf.sd)




# Prep the data so it has the same colors as the bruvs data
hedges.turf.plot <- hedges.turf.df %>%
  mutate(Atoll = ifelse(Site == "Peros Banhos Lagoon", "Peros Banhos", 
                        ifelse(Site == "Peros Banhos Seaward", "Peros Banhos",
                        ifelse(Site == "Salomon Seaward", "Salomon",
                               ifelse(Site == "Salomon Lagoon", "Salomon",
                                      ifelse(Site == "Nelson", "Nelson",
                                             ifelse(Site== "Middle Brother", "Brothers",
                                                    "Egmont")))))))

hedges.turf.plot$Atoll <- factor(hedges.turf.plot$Atoll, 
                                  levels=c("Brothers", "Nelson",
                                           "Peros Banhos", "Salomon", "Egmont"))



# Calculate grand mean
turf.mean <- hedges.turf.plot %>%
  summarize(mean=mean(turf.estimate),
            sd=sd(turf.estimate))

# add back to data
hedges.turf.plot <- hedges.turf.plot %>%
  add_row(Site="Overall", 
          turf.estimate=turf.mean$mean,
          turf.sd=turf.mean$sd, Atoll=NA)


hedges.turf.plot$Site <- factor(hedges.turf.plot$Site, 
                           levels=c("Middle Brother", "Nelson", "Peros Banhos Lagoon", 
"Peros Banhos Seaward", 
"Salomon Lagoon", "Salomon Seaward", "Il de rats", "Il lubine", "Overall"))



# Effect size by site
p_tiles.turf.effectsize <- ggplot(hedges.turf.plot, aes(x=Site, y=turf.estimate, col=Atoll)) +
   geom_point(size=c(6,6,6,6,6,6,6,6,9), 
              shape=(values=c(19,19,19,19,19,19,19,19,18)))+
  geom_errorbar(aes(ymin = turf.estimate-turf.sd, 
                    ymax = turf.estimate+turf.sd), 
                width=0.2) +  labs (x= "Site", y= "Turf Effect Size") +
  theme_pubr() +
  geom_hline(yintercept= 0, linetype=2) +
    theme_pubr(base_size = 16) + 
  theme(axis.text.x = element_blank())+
  scale_color_manual(values= c("#440154FF","#3B528BFF","#21908CFF","#5DC863FF","#FDE725FF")) +
  guides(col = "none",shape="none")+
  geom_vline(xintercept=8.5, linetype="dashed")

p_tiles.turf.effectsize

ggsave(p_tiles.turf.effectsize,
       file="../figures/turf-effect-size.png",
       height=5, width=7)

save(p_tiles.turf.effectsize, file="../data/turf-effect-size.RData")

```



# Permanova 
```{r}
# Broad Categories
perm <- how(nperm = 1000)
setBlocks(perm) <- with(broad.cover_wide, Tile.pair)

colnames(broad.cover_wide)
adonis2(formula= broad.cover_wide[17:24] ~ broad.cover_wide$Treatment, method="bray", by="margin", perm=perm)
# treatment is sig 
```



# Indicator Species
```{r}
# Run the model
inv = multipatt(broad.cover_wide[17:24], broad.cover_wide$Treatment, func = "r.g", control = how(nperm=9999))
summary(inv)
```



Looks good! 18 April 2023