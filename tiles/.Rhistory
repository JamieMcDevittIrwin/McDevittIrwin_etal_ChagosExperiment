mean=mean(Top),
se=std.error(Top))
library(glmmTMB)
library(tidyverse)
library(vegan)
library(ggpubr)
library(dplyr)
library(ggplot2)
library(vegan)
library(ggordiplots)
library(plotly)
library(piecewiseSEM)
library(lme4)
library(glmmTMB)
library(DHARMa)
library(emmeans)
library(tidyverse);library(ggpubr);library(janitor);library(vegan);library(plotrix)
# raw data
data <- read.csv("../data/raw-data/Chagos_November2021_Data_QAQC_Tiles-lab coral_CoralCheck_RRC_Final.xlsx - Chagos_November2021_Data_QAQC_T.csv",stringsAsFactors = FALSE,na.strings=c("","NA"))
# metadata
metadata <- read.csv("../data/raw-data/BIOT_March2019_Data_QAQC-tiles.csv",stringsAsFactors = FALSE,na.strings=c("","NA"))
# Raw Data
View(data)
View(metadata) #221 tiles
# We want to pull out the transect for each tile (all the other columns are filled in from the metadata)
transect <- metadata %>%
mutate(Tile_Treatment = paste(Tag_number, Treatment, sep= ".")) %>%
dplyr::select(Transect, Tile_Treatment)
transect$Transect <- as.character(transect$Transect)
# Clean up the data
corals.2021 <- data %>%
dplyr::select(-c(Treatment_ABC, "Is.it.a.coral.":"Final.Decision",X)) %>% # get rid of silly columns
dplyr::filter(Tube_ID != "81") %>% # get rid of the water sample
mutate(Coral = ifelse(Tube_ID == "None", NA, 1)) %>% # new column to calculate corals
mutate(Tile_position = ifelse(Tile_side. %in%
c("Top?", "Top", "Side/Top", "Top/side", "Side/top"), "Top",
ifelse(Tile_side. %in% c("Bottom?", "Bottom", "Side/Bottom", "Bottom/side", "Side/bottom", "bottom/side", "Bottom (side??)", "Bottom ", "Botttom "), "Bottom",
ifelse(Tile_side. %in% c("Side", "Side/bottom/top", "Side/Top/bottom", "Top/side/bottom"), "Side", "NA")))) %>% # keep these ones for now, but can always change our definition
mutate(Tile_Treatment = paste(Tile, Treatment, sep= ".")) %>%
left_join(transect, by= "Tile_Treatment") %>%
# add in the transect column
dplyr::select(Date, Island, Site, Transect, Tile, Treatment, Tile_Treatment, Tube_ID, Tile_side., Tile_position, Diameter, Coral, Coral_size_bin, Notes) # reorder the columns
corals.2021 %>%
group_by(Treatment) %>%
summarize(Coral.sum = sum(Coral, na.rm= TRUE))
# this is the total number of corals per tile, no matter where they are found on the tile
# Caged	54
# Partial	31
# Uncaged	50
corals.2021 %>%
filter(Tile_side. %in% c("Top?", "Top", "Side/Top", "Top/side", "Side/top")) %>%
group_by(Treatment) %>%
summarize(Coral.sum = sum(Coral, na.rm= TRUE))
# way more corals on the top in caged tiles than uncaged tiles
corals.2021 %>%
filter(Tile_side. %in% c("Bottom?", "Bottom", "Side/Bottom", "Bottom/side", "Side/bottom", "bottom/side", "Bottom (side??)", "Bottom ", "Botttom ")) %>%
group_by(Treatment) %>%
summarize(Coral.sum = sum(Coral, na.rm= TRUE))
# way more corals on the bottom in the uncaged tiles
corals.2021 %>%
filter(Tile_side. %in% c("Side", "Side/bottom/top", "Side/Top/bottom", "Top/side/bottom")) %>%
group_by(Treatment) %>%
summarize(Coral.sum = sum(Coral, na.rm= TRUE))
# simmilar amounts on both the caged and uncaged on the sides
corals.2021 %>%
group_by(Island, Site, Tile, Treatment) %>%
summarize(Coral.sum = sum(Coral, na.rm= TRUE))
corals.2021 %>%
filter(Tile_side. %in% c("Top?", "Top", "Side/Top", "Top/side", "Side/top")) %>%
group_by(Treatment) %>%
summarize(Coral.sum = sum(Coral, na.rm= TRUE))
# Create a wide dataframe
corals.2021_wide <- corals.2021 %>%
pivot_wider(names_from = Tile_position, values_from= Coral, values_fill=0) %>%
dplyr::select(-c(Tube_ID:Notes, "NA")) %>%
group_by(Date, Island,Transect, Site, Tile, Treatment, Tile_Treatment) %>%
summarise_each(funs(sum)) %>% # this adds up each row with the same tile/treatment
filter(Tile_Treatment != "14.Uncaged") %>% # filter out 14 uncaged because it was found flipped and it looked like the bottom and the top were the same in terms of percent cover
mutate(All.Corals = Top + Bottom + Side)
dim(corals.2021_wide)
View(corals.2021_wide)
save(corals.2021_wide, file="../data/created-data/corals.2021_wide.Rdata")
# Create a long dataframe
corals.2021_long <- corals.2021_wide %>%
pivot_longer(-c(Date:Tile_Treatment, All.Corals), names_to= "Tile_position", values_to= "Coral")
View(corals.2021_long)
mean(corals.2021_wide$All.Corals)
# 0.6197183
sd(corals.2021_wide$All.Corals)
# 1.06885
range(corals.2021_wide$All.Corals)
# [1] 0 6
corals.2021_wide %>%
group_by(Treatment) %>%
summarize(sample.size= n())
#
# Caged	92
# Partial	32
# Uncaged	89
corals.2021_wide %>%
group_by(Treatment) %>%
summarize(mean.corals = mean(All.Corals),
sd=sd(All.Corals))
# Caged	0.5760870
# Partial	0.9687500
# Uncaged	0.5393258
corals.2021_wide %>%
group_by(Treatment) %>%
summarize(mean.corals = mean(Top,
sd=sd(Top)))
corals.2021_wide %>%
group_by(Treatment) %>%
summarize(mean.corals = mean(Side,
sd=sd(Side)))
corals.2021_wide %>%
group_by(Treatment) %>%
summarize(mean.corals = mean(Bottom,
sd=sd(Bottom)))
load(file = "../../dovs/data/created/fish.site.tiles.average.RData") # fish.site.tiles.average
load("../../bruvs/data/created/mean.sum.shark.abundance.tiles.RData") # mean.shark.abundance.tiles
load("../../grazing/data/bite.data.RData") # herbivore.bites.site
# Make the names match
test <- corals.2021_wide %>%
mutate(Tile.Site= ifelse(Site == "Il lubine", "Il Lubine",
ifelse(Site == "Il de rats", "Il de rats",
ifelse(Site == "Nelson", "Nelson",
ifelse(Site == "Middle Brother", "Middle Brother",
ifelse(Site == "Il Anglaise Lagoon", "Salomon lagoon",
ifelse(Site == "Il Anglaise Seaward", "Salomon seaward",
ifelse(Site == "Il Poule Lagoon", "Peros Banhos Lagoon", "Peros Banhos Seaward"))))))))
# Make the names match
test2 <- herbivore.bites.site %>%
mutate(Tile.Site= ifelse(Site == "Il Lubine", "Il Lubine",
ifelse(Site == "Il de rats", "Il de rats",
ifelse(Site == "Nelson", "Nelson",
ifelse(Site == "Middle Brother", "Middle Brother",
ifelse(Site == "Il Anglaise Lagoon", "Salomon lagoon",
ifelse(Site == "Il Anglaise Seaward", "Salomon seaward","Peros Banhos Seaward"))))))) %>%
dplyr::select(-c(Site))
# Join shark abundance and fish
consumer.metadata <- fish.site.tiles.average %>%
mutate(Shark_Abundance= ifelse(Atoll %in% "Egmont", "High",
ifelse(Atoll %in% "Salomon", "Medium", "Low"))) %>%
mutate(Shark_Sum_Abundance= ifelse(Atoll %in% "Egmont", 6.9,
ifelse(Atoll %in% "Salomon", 4.8,
ifelse(Atoll %in% "Peros Banhos", 3.8,
ifelse(Atoll %in% "Brothers", 2.9, 3.1)))))
# Join the dataframes
corals.fishes_wide <- left_join(test, consumer.metadata,  by="Tile.Site") %>%
left_join(test2, by="Tile.Site")
save(corals.fishes_wide, file="../data/created-data/corals.fishes_wide.Rdata")
# Create a long dataframe
corals.fishes_long <- corals.fishes_wide %>%
pivot_longer(-c(Date:Tile_Treatment, All.Corals:bites.per.min.mean), names_to= "Tile_position", values_to= "Coral")
library(tidyverse)
library(vegan)
library(ggpubr)
library(dplyr)
library(ggplot2)
library(vegan)
#library(ggordiplots)
library(plotly)
# Coral Net
data <- read.csv("../data/raw-data/annotations.csv",
stringsAsFactors = FALSE,na.strings=c("","NA"))
# Fish and Sharks
load(file = "../../dovs/data/created/fish.site.tiles.average.RData") # fish.site.tiles.average
load("../../bruvs/data/created/mean.sum.shark.abundance.tiles.RData") # mean.shark.abundance.tiles
load("../../grazing/data/bite.data.RData") # herbivore.bites.site
####################
# Join Metadata to Tile Data
#######################
# Join shark abundance and fish
consumer.density <- fish.site.tiles.average %>%
mutate(Shark_Abundance= ifelse(Atoll %in% "Egmont", "High", ifelse(Atoll %in% "Salomon", "Medium", "Low"))) %>%
mutate(Shark_Sum_Abundance= ifelse(Atoll %in% "Egmont", 6.9, ifelse(Atoll %in% "Salomon", 4.8, ifelse(Atoll %in% "Peros Banhos", 3.8, ifelse(Atoll %in% "Brothers", 2.9, 3.1)))))
unique(data$Site)
unique(consumer.density$Tile.Site)
unique(herbivore.bites.site$Site)
# Make the names match
graze <- herbivore.bites.site %>%
mutate(Tile.Site= ifelse(Site == "Il Lubine", "Il Lubine",
ifelse(Site == "Il de rats", "Il de rats",
ifelse(Site == "Nelson", "Nelson",
ifelse(Site == "Middle Brother", "Middle Brother",
ifelse(Site == "Il Anglaise Lagoon", "Salomon lagoon",
ifelse(Site == "Il Anglaise Seaward", "Salomon seaward","Peros Banhos Seaward"))))))) %>%
dplyr::select(-c(Site))
# Make the names match
data.match <- data %>%
mutate(Tile.Site= ifelse(Site == "Il Lubine", "Il Lubine",
ifelse(Site == "Il de Rats", "Il de rats",
ifelse(Site == "Nelson", "Nelson",
ifelse(Site == "Middle Brother", "Middle Brother",
ifelse(Site == "Il Anglais Lagoon", "Salomon lagoon",
ifelse(Site == "Il Anglais Seaward", "Salomon seaward",
ifelse(Site == "Il Poule Lagoon", "Peros Banhos Lagoon", "Peros Banhos Seaward"))))))))
unique(data.match$Tile.Site)
# Make wide dataframes
data_wide <- data.match %>%
group_by(Name, Island, Site, Transect, Treatment, Tile.pair, Label, Tile.Site) %>%
tally() %>% # counts the observations in each group (Label = smallest group)
ungroup() %>%
pivot_wider(names_from= Label, values_from= n, values_fill= 0)
dim(data_wide) # 213 45 (213 tiles)
data.consumer <- data_wide %>%
left_join(consumer.density, by="Tile.Site")
dim(data.consumer) # 213 52
data.all.metadata <- data.consumer %>%
left_join(graze, by="Tile.Site")
dim(data.all.metadata) # 213 54
#########################
# Clean the cover data
#########################
# Filter out cover categories we don't want to include
colnames(data.all.metadata)
c("Off", "_MOBF", "Hardware")
# Shell? Mollusc?
# are there any taxa with 0?
colSums(data.all.metadata[,c(8:45)]) # no?
data.metadata.clean <- data.all.metadata %>%
dplyr::select(-c("Off", "_MOBF")) # Hardware is not in there
cover.df1 <- data.metadata.clean  %>%
unite(Tile.Treatment, c(Tile.pair, Treatment), sep=".", remove=FALSE) %>%
column_to_rownames(var="Tile.Treatment")
# this creates a df with all the cover categories we want
# Normalize by number of points
colnames(cover.df1)
cover.df2 <- cover.df1 %>%
dplyr::select(c(`*TURF`:"GREEN9"))
rowSums(cover.df2 ) # almost none equal 200 but all close (this is after non-biological is filtered out)
cover.df3 <- decostand(cover.df2, "total")
rowSums(cover.df3) # 1
# this creates a df with normalized cover categories
# Combine back with metadata
metadata <- cover.df1 %>%
rownames_to_column("Tile.Treatment") %>%
dplyr::select(c(Tile.Treatment:Tile.Site, Atoll:bites.per.min.mean))
cover_wide <- cover.df3 %>%
rownames_to_column("Tile.Treatment") %>%
left_join(metadata, by="Tile.Treatment") %>%
dplyr::select(c(Tile.Treatment, Name:bites.per.min.mean,`*TURF`:"GREEN9"))
# we had filtered out tile 14 uncaged, but it is already gone from coralnet (talked to mica about it) because it was upside down
cover_data <- cover.df3
dim(cover_data) # 213  36
# Long Dataframes
cover_long <- cover_wide %>%
pivot_longer(-c(Tile.Treatment:bites.per.min.mean),
names_to="Category", values_to= "Percent.Cover")
dim(cover_wide) # 213 by 53
save(cover_wide, file="../data/created-data/cover_wide.Rdata")
# Add up smaller categories
broad.cover_wide <- cover_wide %>%
mutate(Macroalgae = GREEN + GREEN3 + GREEN4 + GREEN5 +
GREEN7 + GREEN8 + GREEN9 +
`_HALI` + `_LOBO` + `_RDEN` +
RDUP1 + RDUP2 + RDUP3 +
BROWN1 + BROWN2 + BLTAR + BLACK1) %>%
mutate(CCA = CCAG + CCAP + `_CCA`) %>%
mutate(Coral = D_coral + `_CO`) %>%
mutate(Invertebrates = `_VER` + WP + `_TUNS` + `_BRY` + `_FORM` + ZOANT + DEAD_BRY + `_TUNC` + `_BI` + `_SP`) %>%
rename(Sediment = `_SED`) %>%
rename(Unknown= `_UNK`) %>%
rename(Turf = `*TURF`) %>%
rename(Bare = "BareP") %>%
dplyr::select(c(Tile.Treatment:bites.per.min.grazeable.mean, Macroalgae, CCA, Turf, Coral, Invertebrates, Sediment, Bare, Unknown))
save(broad.cover_wide, file="../data/created-data/broad.cover_wide.Rdata")
# Long DF
broad.cover_long <- broad.cover_wide %>%
pivot_longer(cols=Macroalgae:Unknown,
names_to = "Category",
values_to = "Count")
library(tidyverse)
library(vegan)
library(ggpubr)
library(dplyr)
library(ggplot2)
library(vegan)
library(ggordiplots)
library(plotly)
library(piecewiseSEM)
library(lme4)
library(glmmTMB)
library(DHARMa)
library(emmeans)
load("../data/created-data/corals.2021_wide.Rdata") # corals.2021_wide
load("../data/created-data/broad.cover_wide.Rdata") # broad.cover_wide
colnames(corals.2021_wide)
colnames(broad.cover_wide)
dim(corals.2021_wide) # 213 tiles
dim(broad.cover_wide) # 213 tiles
# Join corals and cover together
corals <- corals.2021_wide %>%
ungroup() %>%
dplyr::select(Tile_Treatment, Top:All.Corals)
corals.cover <- full_join(corals, broad.cover_wide,
by=c("Tile_Treatment" ="Tile.Treatment")) %>%
dplyr::select(Tile_Treatment, Name:Unknown, Top:All.Corals)
dim(corals.cover) # 213 tiles
#######
# Coral
######
corals.cover$Site <- factor(corals.cover$Site,
levels=c("Middle Brother", "Nelson", "Il Poule Lagoon",
"Il Poule Seaward",
"Il Anglais Lagoon", "Il Anglais Seaward", "Il de Rats", "IL lubine"))
corals.cover$Island <- factor(corals.cover$Island, levels=c("Middle Brother", "Nelson", "Peros Banos",
"Salomon", "Egmont"))
meancorals <- corals.cover %>%
group_by(Site,Island,Treatment) %>%
summarise(sum= sum(All.Corals),
mean=mean(All.Corals),
sd=sd(All.Corals))
# Effect size by site
p_coral_siteXtreatment <- ggplot(meancorals, aes(x=Site, y=mean, col=Island)) +
geom_pointrange(aes(ymin=mean-sd, ymax=mean+sd)) +
labs (x= "Site", y= "Coral Abundance") +
facet_wrap(~ Treatment) +
theme_pubr() +
theme_pubr(base_size = 16) +
theme(axis.text.x = element_blank())+
scale_color_manual(values= c("#440154FF","#3B528BFF","#21908CFF","#5DC863FF","#FDE725FF"))
p_coral_siteXtreatment
#######
# CCA
######
meancca <- corals.cover %>%
group_by(Site,Island, Treatment) %>%
summarise(sum= sum(CCA),
mean=mean(CCA),
sd=sd(CCA))
# Effect size by site
p_cca_siteXtreatment <- ggplot(meancca, aes(x=Site, y=mean, col=Island)) +
geom_pointrange(aes(ymin=mean-sd, ymax=mean+sd)) +
labs (x= "Site", y= "CCA Abundance") +
facet_wrap(~ Treatment) +
theme_pubr() +
theme_pubr(base_size = 16) +
theme(axis.text.x = element_blank())+
scale_color_manual(values= c("#440154FF","#3B528BFF","#21908CFF","#5DC863FF","#FDE725FF")) +
guides(col = "none")
p_cca_siteXtreatment
#######
# Macroalgae
######
meanalgae <- corals.cover %>%
group_by(Site,Island, Treatment) %>%
summarise(sum= sum(Macroalgae),
mean=mean(Macroalgae),
sd=sd(Macroalgae))
# Effect size by site
p_algae_siteXtreatment <- ggplot(meanalgae, aes(x=Site, y=mean, col=Island)) +
geom_pointrange(aes(ymin=mean-sd, ymax=mean+sd)) +
labs (x= "Site", y= "Macroalgae Abundance") +
facet_wrap(~ Treatment) +
theme_pubr() +
theme_pubr(base_size = 16) +
theme(axis.text.x = element_blank())+
scale_color_manual(values= c("#440154FF","#3B528BFF","#21908CFF","#5DC863FF","#FDE725FF")) +
guides(col = "none")
p_algae_siteXtreatment
#######
# Turf
######
meanturf <- corals.cover %>%
group_by(Site,Island, Treatment) %>%
summarise(sum= sum(Turf),
mean=mean(Turf),
sd=sd(Turf))
# Effect size by site
p_turf_siteXtreatment <- ggplot(meanturf, aes(x=Site, y=mean, col=Island)) +
geom_pointrange(aes(ymin=mean-sd, ymax=mean+sd)) +
labs (x= "Site", y= "Turf Abundance") +
facet_wrap(~ Treatment) +
theme_pubr() +
theme_pubr(base_size = 16) +
theme(axis.text.x = element_blank())+
scale_color_manual(values= c("#440154FF","#3B528BFF","#21908CFF","#5DC863FF","#FDE725FF")) +
guides(col = "none")
p_turf_siteXtreatment
p_abundance_raw <- ggarrange(p_coral_siteXtreatment,
p_cca_siteXtreatment,
p_algae_siteXtreatment,
p_turf_siteXtreatment,
common.legend=TRUE,
nrow=4)
p_abundance_raw
ggsave(p_abundance_raw, file="../figures/abundance-site-cover.png",
height=10)
# How much of the data is zero?
100*sum(corals.cover$All.Corals == 0)/nrow(corals.cover) # 65.25822
# How much of the data is zero?
100*sum(corals.cover$All.Corals == 0)/nrow(corals.cover) # 65.25822
hist(corals.cover$All.Corals) # very zero inflated
# Convert characters to factors
corals.cover$Treatment <- as.factor(corals.cover$Treatment)
corals.cover$Island <- as.factor(corals.cover$Island)
corals.cover$Transect <- as.factor(corals.cover$Transect)
corals.cover$Tile.pair <- as.factor(corals.cover$Tile.pair)
corals.cover$Tile_Treatment <- as.factor(corals.cover$Tile_Treatment)
corals.cover$Site <- as.factor(corals.cover$Site)
#### Initial Models ####
m1 <- glmmTMB(All.Corals ~ CCA + Turf + Macroalgae + Treatment*Herbivores.avg +Treatment*Chaetodontidae.avg + (1|Island) + (1|Tile.pair),
zi = ~ 0, data = corals.cover, family = poisson)
m2 <- glmmTMB(All.Corals ~ CCA + Turf + Macroalgae + Treatment*Herbivores.avg +Treatment*Chaetodontidae.avg + (1|Island) + (1|Tile.pair), zi = ~ 1, data = corals.cover, family = poisson)
m3 <- glmmTMB(All.Corals ~ CCA + Turf + Macroalgae + Treatment*Herbivores.avg +Treatment*Chaetodontidae.avg + (1|Island) + (1|Tile.pair), zi = ~ 0, data = corals.cover, family = nbinom2())
m4 <- glmmTMB(All.Corals ~ CCA + Turf + Macroalgae + Treatment*Herbivores.avg +Treatment*Chaetodontidae.avg + (1|Island) + (1|Tile.pair), zi = ~ 1, data = corals.cover, family = nbinom2())
AIC(m1)
AIC(m2) # best (barely)
AIC(m3)
AIC(m4)
summary(m2) # zero inflation ~1
car::Anova(m2, type=3) # treatment, chaetodontidae, almost treatment*chaetodontidae
summary(m2) # zero inflation ~1
car::Anova(m2, type=3) # treatment, chaetodontidae, almost treatment*chaetodontidae
summary(m2) # zero inflation ~1
summary(m2) # zero inflation ~1
car::Anova(m2, type=3) # treatment, chaetodontidae, almost treatment*chaetodontidae
# Filter out Il Poule Lagoon (because it doesn't have grazing data)
graze.corals.cover <- corals.cover %>%
filter(Site != "Il Poule Lagoon")
# How much of the data is zero?
100*sum(graze.corals.cover$All.Corals == 0)/nrow(graze.corals.cover) # 61.11111
hist(graze.corals.cover$All.Corals) # very zero inflated
# Convert characters to factors
graze.corals.cover$Treatment <- as.factor(graze.corals.cover$Treatment)
graze.corals.cover$Island <- as.factor(graze.corals.cover$Island)
graze.corals.cover$Transect <- as.factor(graze.corals.cover$Transect)
graze.corals.cover$Tile.pair <- as.factor(graze.corals.cover$Tile.pair)
graze.corals.cover$Tile_Treatment <- as.factor(graze.corals.cover$Tile_Treatment)
graze.corals.cover$Site <- as.factor(graze.corals.cover$Site)
#### Initial Models ####
m1 <- glmmTMB(All.Corals ~ CCA + Turf + Macroalgae + Treatment*bites.per.min.grazeable.mean + (1|Island) + (1|Tile.pair),
zi = ~ 0, data = graze.corals.cover, family = poisson)
m2 <- glmmTMB(All.Corals ~ CCA + Turf + Macroalgae + Treatment*bites.per.min.grazeable.mean + (1|Island) + (1|Tile.pair), zi = ~ 1, data = graze.corals.cover, family = poisson)
m3 <- glmmTMB(All.Corals ~ CCA + Turf + Macroalgae + Treatment*bites.per.min.grazeable.mean + (1|Island) + (1|Tile.pair), zi = ~ 0, data = graze.corals.cover, family = nbinom2())
m4 <- glmmTMB(All.Corals ~ CCA + Turf + Macroalgae + Treatment*bites.per.min.grazeable.mean + (1|Island) + (1|Tile.pair), zi = ~ 1, data = graze.corals.cover, family = nbinom2())
AIC(m1)
AIC(m2) # best (barely)
AIC(m3)
AIC(m4)
summary(m2)
car::Anova(m2, type=3) # nothing is significant
performance::r2(m2)
# warning about random effects
# Conditional R2: 0.410
#      Marginal R2: 0.064
testDispersion(m2) # not sig, close to 1
# Check residuals
simres <- simulateResiduals(m2)
plot(simres) # looks good!
# Plot in GGplot
library("ggeffects")
plot(ggemmeans(m2, c("bites.per.min.grazeable.mean", "Treatment")))
plot(ggemmeans(m2, c("CCA")))
plot(ggemmeans(m2, c("Turf")))
plot(ggemmeans(m2, c("Macroalgae")))
plot(ggemmeans(m2, c("bites.per.min.grazeable.mean")))
# make as dfs
graze.treat.df <- as.data.frame(ggemmeans(m2, c("bites.per.min.grazeable.mean", "Treatment")))
cca.df <- as.data.frame(ggemmeans(m2, c("CCA")))
turf.df <- as.data.frame(ggemmeans(m2, c("Turf")))
algae.df <- as.data.frame(ggemmeans(m2, c("Macroalgae")))
graze.df <- as.data.frame(ggemmeans(m2, c("bites.per.min.grazeable.mean")))
# Grazing X treatment
p_graze_treatment <- ggplot(graze.treat.df, aes(x, predicted, color = group)) +
geom_line(size=1.5) +
theme_pubr(base_size=16) +
labs(x="Grazing", y="Predicted Coral Recruits") +
geom_ribbon(aes(ymin=conf.low, ymax=conf.high, fill=group), alpha=0.1, colour=NA)+
scale_colour_hue(h = c(180, 300)) +
ggtitle("a)")
p_graze_treatment
# grazing
p_graze <- ggplot(graze.df, aes(x, predicted)) +
geom_line(size=1.5) +
theme_pubr(base_size=16) +
labs(x="Grazing", y="") +
geom_ribbon(aes(ymin=conf.low, ymax=conf.high), alpha=0.2, colour=NA) +
geom_text(label="*", x=1.2, y=2.5, size=16)+
ggtitle("b)")
p_graze
# CCA
p_cca <- ggplot(cca.df, aes(x, predicted)) +
geom_line(size=1.5) +  theme_pubr(base_size=16) +
labs(x="CCA", y="") +
geom_ribbon(aes(ymin=conf.low, ymax=conf.high), alpha=0.2, colour=NA)+
ggtitle("c)")
p_cca
# Turf
p_turf <- ggplot(turf.df, aes(x, predicted)) +
geom_line(size=1.5) +  theme_pubr(base_size=16) +
labs(x="Turf", y="") +
geom_ribbon(aes(ymin=conf.low, ymax=conf.high), alpha=0.2, colour=NA)+
ggtitle("e)")
p_turf
# Algae
# Turf
p_algae <- ggplot(algae.df, aes(x, predicted)) +
geom_line(size=1.5) +  theme_pubr(base_size=16) +
labs(x="Macroalgae", y="Predicted Coral Recruits") +
geom_ribbon(aes(ymin=conf.low, ymax=conf.high), alpha=0.2, colour=NA)+
ggtitle("d)")
p_algae
p_mixed.model <- ggarrange(p_graze_treatment,
p_graze,
p_cca, p_algae, p_turf, common.legend=TRUE,
nrow=)
p_mixed.model
ggsave(p_mixed.model, file= "../figures/mixed-model-results-ggemmeans-grazing.png", width=10, height=6)
summary(m2)
car::Anova(m2, type=3) # nothing is significant
