p_nmds.broad
# refine the plot (you can pull out "plot" from the gg_ordiplot call)
p_nmds.broad <- plot$plot +
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+
scale_colour_hue(h = c(180, 300), l=10) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
#annotate(geom="text", label="a)", y=1.5, x=-1.1, size=6)
ggtitle("a)") +
theme(legend.position="bottom")
p_nmds.broad
# refine the plot (you can pull out "plot" from the gg_ordiplot call)
p_nmds.broad <- plot$plot +
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+
scale_colour_hue(h = c(180, 300), l=100) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
#annotate(geom="text", label="a)", y=1.5, x=-1.1, size=6)
ggtitle("a)") +
theme(legend.position="bottom")
p_nmds.broad
plot <- gg_ordiplot(data.mds,
groups= broad.cover_wide$Treatment,
hull=FALSE, ellipse=TRUE, spiders=FALSE,
kind="sd", pt.size=4) +geom_point(alpha = 0.2)
plot
plot$plot
plot <- gg_ordiplot(data.mds,
groups= broad.cover_wide$Treatment,
hull=FALSE, ellipse=TRUE, spiders=FALSE,
kind="sd", pt.size=4)
plot
plot$plot
plot$plot+geom_point(alpha=0.1)
plot$$df_mean.ord
plot$df_mean.ord
plot
ggplot(plot$df_ord aes(x = NMDS1, y = NMDS2, colour = Treatment))
ggplot(plot$df_ord,aes(x = NMDS1, y = NMDS2, colour = Treatment))
plot$df_ord
ggplot(plot$df_ord,aes(x = x, y = y, colour = Treatment))
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group))
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(data = plot$df_mean.ord, size = 5)
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5)                       # centroids
plot
ellipse.plot <- gg_ordiplot(data.mds,
groups= broad.cover_wide$Treatment,
hull=FALSE, ellipse=TRUE, spiders=FALSE,plot=FALSE,
kind="sd", pt.size=4)
ellipse.plot$plot
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plotdf_ellipse, aes(x = x, y = y, color = Group), show.legend = FALSE)
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse, aes(x = x, y = y, color = Group), show.legend = FALSE)
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse, aes(x = x, y = y, color = Group), show.legend = FALSE)+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+
scale_colour_hue(h = c(180, 300)) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
#annotate(geom="text", label="a)", y=1.5, x=-1.1, size=6)
ggtitle("a)") +
theme(legend.position="bottom")
plot <- gg_ordiplot(data.mds,
groups= broad.cover_wide$Treatment,
hull=FALSE, ellipse=TRUE, spiders=FALSE,
kind="sd", pt.size=4)
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse, aes(x = x, y = y, color = Group), show.legend = FALSE)+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=x, y=0, yend=y),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=x, y=y, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+
scale_colour_hue(h = c(180, 300)) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
#annotate(geom="text", label="a)", y=1.5, x=-1.1, size=6)
ggtitle("a)") +
theme(legend.position="bottom")
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse, aes(x = x, y = y, color = Group), show.legend = FALSE)+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+
scale_colour_hue(h = c(180, 300)) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
#annotate(geom="text", label="a)", y=1.5, x=-1.1, size=6)
ggtitle("a)") +
theme(legend.position="bottom")
plot <- gg_ordiplot(data.mds,
groups= broad.cover_wide$Treatment,
hull=FALSE, ellipse=TRUE, spiders=FALSE,
kind="sd", pt.size=4)
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse, aes(x = x, y = y, color = Group), show.legend = FALSE)+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+
scale_colour_hue(h = c(180, 300)) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
#annotate(geom="text", label="a)", y=1.5, x=-1.1, size=6)
ggtitle("a)") +
theme(legend.position="bottom")
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse, aes(x = x, y = y, color = Group), show.legend = FALSE)
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse,
aes(x = x, y = y, color = Group), show.legend = FALSE) +
theme_bw()
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse,
aes(x = x, y = y, color = Group), show.legend = FALSE) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none")
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse,
aes(x = x, y = y, color = Group), show.legend = FALSE) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment")
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse,
aes(x = x, y = y, color = Group), show.legend = FALSE) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse,
aes(x = x, y = y, color = Group), show.legend = FALSE) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16) +
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse,
aes(x = x, y = y, color = Group), show.legend = FALSE) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16) +
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse,
aes(x = x, y = y, color = Group), show.legend = FALSE) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16) +
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)
sig.spp.scrs
scale_colour_hue(h = alpha(c(180, 300),1) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
p_nmds.broad <- plot$plot +
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+
scale_colour_hue(h = alpha(c(180, 300),1) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
#annotate(geom="text", label="a)", y=1.5, x=-1.1, size=6)
ggtitle("a)") +
theme(legend.position="bottom")
p_nmds.broad
# refine the plot (you can pull out "plot" from the gg_ordiplot call)
p_nmds.broad <- plot$plot +
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+
scale_colour_hue(h = alpha(c(180, 300),1)) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
#annotate(geom="text", label="a)", y=1.5, x=-1.1, size=6)
ggtitle("a)") +
theme(legend.position="bottom")
p_nmds.broad
# refine the plot (you can pull out "plot" from the gg_ordiplot call)
p_nmds.broad <- plot$plot +
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+
scale_colour_hue(h = alpha(c(180, 300),0.5)) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
#annotate(geom="text", label="a)", y=1.5, x=-1.1, size=6)
ggtitle("a)") +
theme(legend.position="bottom")
p_nmds.broad
# refine the plot (you can pull out "plot" from the gg_ordiplot call)
p_nmds.broad <- plot$plot +
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+
scale_colour_hue(h = c(180, 300)) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
#annotate(geom="text", label="a)", y=1.5, x=-1.1, size=6)
ggtitle("a)") +
theme(legend.position="bottom") +
scale_alpha_manual(values=c(0.1, 0.5, .6))
p_nmds.broad
# refine the plot (you can pull out "plot" from the gg_ordiplot call)
p_nmds.broad <- plot$plot +
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+
scale_alpha_manual(values=c(0.1, 0.5, .6))+
scale_colour_hue(h = c(180, 300)) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
#annotate(geom="text", label="a)", y=1.5, x=-1.1, size=6)
ggtitle("a)") +
theme(legend.position="bottom")
p_nmds.broad
# refine the plot (you can pull out "plot" from the gg_ordiplot call)
p_nmds.broad <- plot$plot +
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+
scale_alpha_manual(values=c(0.1, 0.5, .6))
p_nmds.broad
# refine the plot (you can pull out "plot" from the gg_ordiplot call)
p_nmds.broad <- plot$plot +
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+
scale_alpha_manual(values=c(0.1))
p_nmds.broad
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse,
aes(x = x, y = y, color = Group), show.legend = FALSE) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16) +
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)
# Significant Species
spp.fit <- envfit(data.mds, broad.cover_wide[17:24], permutations = 999) # this fits species vectors
spp.scrs <- as.data.frame(scores(spp.fit, display = "vectors")) #save species intrinsic values into dataframe
spp.scrs <- cbind(spp.scrs, Species = rownames(spp.scrs)) #add species names to dataframe
spp.scrs <- cbind(spp.scrs, pval = spp.fit$vectors$pvals) #add pvalues to dataframe so you can select species which are significant
#spp.scrs<- cbind(spp.scrs, abrev = abbreviate(spp.scrs$Species, minlength = 6)) #abbreviate species names
sig.spp.scrs <- subset(spp.scrs, pval<0.05) #subset data to show species significant at 0.05
head(sig.spp.scrs)
sig.spp.scrs
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse,
aes(x = x, y = y, color = Group), show.legend = FALSE) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16) +
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
# this is where it is breaking
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)
sig.spp.scrs
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse,
aes(x = x, y = y, color = Group), show.legend = FALSE) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16) +
geom_segment(data = sig.spp.scrs,
aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
# this is where it is breaking
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = "Species"),
cex = 4, direction = "both", segment.size = 0.25)
sig.spp.scrs
ggplot(plot$df_ord,aes(x = x, y = y, colour = Group)) +
geom_point(alpha=0.5) +
geom_point(data = plot$df_mean.ord, size = 5) +
geom_path(data = plot$df_ellipse,
aes(x = x, y = y, color = Group), show.legend = FALSE) +
theme_bw() +
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16) +
geom_segment(data = sig.spp.scrs,
aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")),
colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
# this is where it is breaking
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species))
plot <- gg_ordiplot(data.mds,
groups= broad.cover_wide$Treatment,
hull=FALSE, ellipse=TRUE, spiders=FALSE,
kind="sd", pt.size=1)
plot
# refine the plot (you can pull out "plot" from the gg_ordiplot call)
p_nmds.broad <- plot$plot +
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+ scale_colour_hue(h = c(180, 300)) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
#annotate(geom="text", label="a)", y=1.5, x=-1.1, size=6)
ggtitle("a)") +
theme(legend.position="bottom")
p_nmds.broad
# refine the plot (you can pull out "plot" from the gg_ordiplot call)
p_nmds.broad <- plot$plot +
geom_point(data = plot$df_mean.ord, size = 5)+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+ scale_colour_hue(h = c(180, 300)) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
#annotate(geom="text", label="a)", y=1.5, x=-1.1, size=6)
ggtitle("a)") +
theme(legend.position="bottom")
p_nmds.broad
# refine the plot (you can pull out "plot" from the gg_ordiplot call)
p_nmds.broad <- plot$plot +
geom_point(data = plot$df_mean.ord, size = 5, aes(x = x, y = y, colour = Group))+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
legend.position= "none") +
labs(colour= "Treatment") +
theme_pubr(base_size = 16)+
geom_segment(data = sig.spp.scrs, aes(x = 0, xend=NMDS1, y=0, yend=NMDS2),
arrow = arrow(length = unit(0.25, "cm")), colour = "grey10", lwd=0.3)+ #add vector arrows of significant species
ggrepel::geom_text_repel(data = sig.spp.scrs,
aes(x=NMDS1, y=NMDS2, label = Species),
cex = 4, direction = "both", segment.size = 0.25)+ scale_colour_hue(h = c(180, 300)) + #add labels for species, use ggrepel::geom_text_repel so that labels do not overlap
#annotate(geom="text", label="a)", y=1.5, x=-1.1, size=6)
ggtitle("a)") +
theme(legend.position="bottom")
p_nmds.broad
?gg_ordiplot
p_nmds.broad
ggsave(file= "../figures/nmds-broad-categories.png",
plot=p_nmds.broad, height=8, width=10)
save(p_nmds.broad, file="../data/created-data/NMDS-broad-categories.RData")
# Combine barplots and NMDS
p_fig4 <- ggarrange(p_nmds.broad, p_relabund_treatment)
p_fig4
ggsave(p_fig4, file="../figures/nmds-barplot.png",
height=7,width=11)
